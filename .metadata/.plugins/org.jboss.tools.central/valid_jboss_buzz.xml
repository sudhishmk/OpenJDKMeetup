<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>An introduction to Linux virtual interfaces: Tunnels</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YzijAYPeaUU/" /><category term="Community" /><category term="Red Hat Enterprise Linux" /><category term="Linux" /><author><name>Hangbin Liu</name></author><id>https://developers.redhat.com/blog/?p=575967</id><updated>2019-03-27T07:00:27Z</updated><published>2019-03-27T07:00:27Z</published><content type="html">&lt;p&gt;Linux has supported many kinds of tunnels, but new users may be confused by their differences and unsure which one is best suited for a given use case. In this article, I will give a brief introduction for commonly used tunnel interfaces in the Linux kernel. There is no code analysis, only a brief introduction to the interfaces and their usage on Linux. Anyone with a network background might be interested in this information. A list of tunnel interfaces, as well as help on specific tunnel configuration, can be obtained by issuing the iproute2 command &lt;code&gt;ip link help&lt;/code&gt;.&lt;br /&gt; &lt;span id="more-575967"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;This post covers the following frequently used interfaces:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#ipip"&gt;IPIP Tunnel&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#sit"&gt;SIT Tunnel&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#ip6tnl"&gt;ip6tnl Tunnel&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#vit"&gt;VTI and VTI6&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#gre"&gt;GRE and GRETAP&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#gre6"&gt;GRE6 and GRE6TAP&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#fou"&gt;FOU&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#gue"&gt;GUE&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#geneve"&gt;GENEVE&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#erspan"&gt;ERSPAN and IP6ERSPAN&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;After reading this article, you will know what these interfaces are, the differences between them, when to use them, and how to create them.&lt;/p&gt; &lt;h2&gt;&lt;a name="ipip"&gt;&lt;/a&gt;IPIP Tunnel&lt;/h2&gt; &lt;p&gt;IPIP tunnel, just as the name suggests, is an IP over IP tunnel, defined in &lt;a href="https://tools.ietf.org/html/rfc2003" target="_blank" rel="noopener noreferrer"&gt;RFC 2003&lt;/a&gt;. The IPIP tunnel header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-576067 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ipip.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ipip.png" alt="" width="957" height="94" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ipip.png 957w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/ipip-300x29.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/ipip-768x75.png 768w" sizes="(max-width: 957px) 100vw, 957px" /&gt;&lt;/p&gt; &lt;p&gt;It&amp;#8217;s typically used to connect two internal IPv4 subnets through public IPv4 internet. It has the lowest overhead but can only transmit IPv4 unicast traffic. That means you &lt;b&gt;cannot&lt;/b&gt; send multicast via IPIP tunnel.&lt;/p&gt; &lt;p&gt;IPIP tunnel supports both IP over IP and MPLS over IP.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Note&lt;/b&gt;: When the &lt;code&gt;ipip&lt;/code&gt; module is loaded, or an IPIP device is created for the first time, the Linux kernel will create a &lt;code&gt;tunl0&lt;/code&gt; default device in each namespace, with attributes &lt;code&gt;local=any&lt;/code&gt; and &lt;code&gt;remote=any&lt;/code&gt;. When receiving IPIP protocol packets, the kernel will forward them to &lt;code&gt;tunl0&lt;/code&gt; as a fallback device if it can&amp;#8217;t find another device whose local/remote attributes match their source or destination address more closely.&lt;/p&gt; &lt;p&gt;Here is how to create an IPIP tunnel:&lt;/p&gt; &lt;pre&gt;On Server A: # ip link add name ipip0 type ipip local remote # ip link set ipip0 up # ip addr add /24 dev ipip0 Add a remote internal subnet route if the endpoints don't belong to the same subnet # ip route add /24 dev ipip0 On Server B: # ip link add name ipip0 type ipip local remote # ip link set ipip0 up # ip addr add /24 dev ipip0 # ip route add /24 dev ipip0 &lt;/pre&gt; &lt;h2&gt;&lt;a name="sit"&gt;&lt;/a&gt;SIT Tunnel&lt;/h2&gt; &lt;p&gt;SIT stands for Simple Internet Transition. The main purpose is to interconnect isolated IPv6 networks, located in global IPv4 internet.&lt;/p&gt; &lt;p&gt;Initially, it only had an IPv6 over IPv4 tunneling mode. After years of development, however, it acquired support for several different modes, such as &lt;code&gt;ipip&lt;/code&gt; (the same with IPIP tunnel), &lt;code&gt;ip6ip&lt;/code&gt;, &lt;code&gt;mplsip&lt;/code&gt;, and &lt;code&gt;any&lt;/code&gt;. Mode &lt;code&gt;any&lt;/code&gt; is used to accept both IP and IPv6 traffic, which may prove useful in some deployments. SIT tunnel also supports &lt;a href="https://www.ietf.org/rfc/rfc4214.txt" target="_blank" rel="noopener noreferrer"&gt;ISATA&lt;/a&gt;, and here is a &lt;a href="http://www.litech.org/isatap" target="_blank" rel="noopener noreferrer"&gt;usage example&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The SIT tunnel header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-576077 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/sit.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/sit.png" alt="" width="961" height="96" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/sit.png 961w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/sit-300x30.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/sit-768x77.png 768w" sizes="(max-width: 961px) 100vw, 961px" /&gt;&lt;/p&gt; &lt;p&gt;When the &lt;code&gt;sit&lt;/code&gt; module is loaded, the Linux kernel will create a default device, named &lt;code&gt;sit0&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Here is how to create a SIT tunnel:&lt;/p&gt; &lt;pre&gt;On Server A: # ip link add name sit1 type sit local remote mode any # ip link set sit1 up # ip addr add /24 dev sit1 &lt;/pre&gt; &lt;p&gt;Then, perform the same steps on the remote side.&lt;/p&gt; &lt;h2&gt;&lt;a name="ip6tnl"&gt;&lt;/a&gt;ip6tnl Tunnel&lt;/h2&gt; &lt;p&gt;ip6tnl is an IPv4/IPv6 over IPv6 tunnel interface, which looks like an IPv6 version of the SIT tunnel. The tunnel header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-576057 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ip6tnl.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ip6tnl.png" alt="" width="962" height="100" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/ip6tnl.png 962w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/ip6tnl-300x31.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/ip6tnl-768x80.png 768w" sizes="(max-width: 962px) 100vw, 962px" /&gt;&lt;/p&gt; &lt;p&gt;ip6tnl supports modes &lt;code&gt;ip6ip6&lt;/code&gt;, &lt;code&gt;ipip6&lt;/code&gt;, &lt;code&gt;any&lt;/code&gt;.Â  Mode &lt;code&gt;ipip6&lt;/code&gt; is IPv4 over IPv6, and mode &lt;code&gt;ip6ip6&lt;/code&gt; is IPv6 over IPv6, and mode &lt;code&gt;any&lt;/code&gt; supports both IPv4/IPv6 over IPv6.&lt;/p&gt; &lt;p&gt;When the &lt;code&gt;ip6tnl&lt;/code&gt; module is loaded, the Linux kernel will create a default device, named &lt;code&gt;ip6tnl0&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Here is how to create an ip6tnl tunnel:&lt;/p&gt; &lt;pre&gt;# ip link add name ipip6 type ip6tnl local remote mode any &lt;/pre&gt; &lt;h2&gt;&lt;a name="vti"&gt;&lt;/a&gt;VTI and VTI6&lt;/h2&gt; &lt;p&gt;Virtual Tunnel Interface (VTI) on Linux is similar to Cisco&amp;#8217;s VTI and Juniper&amp;#8217;s implementation of secure tunnel (st.xx).&lt;/p&gt; &lt;p&gt;This particular tunneling driver implements IP encapsulations, which can be used with xfrm to give the notion of a secure tunnel and then use kernel routing on top.&lt;/p&gt; &lt;p&gt;In general, VTI tunnels operate in almost the same way as ipip or sit tunnels, except that they add a fwmark and IPsec encapsulation/decapsulation.&lt;/p&gt; &lt;p&gt;VTI6 is the IPv6 equivalent of VTI.&lt;/p&gt; &lt;p&gt;Here is how to create a VTI tunnel:&lt;/p&gt; &lt;pre&gt;# ip link add name vti1 type vti key local remote # ip link set vti1 up # ip addr add /24 dev vti1 # ip xfrm state add src dst spi mode tunnel # ip xfrm state add src dst spi mode tunnel # ip xfrm policy add dir in tmpl src dst mode tunnel mark # ip xfrm policy add dir out tmpl src dst mode tunnel mark &lt;/pre&gt; &lt;p&gt;You can also configure IPsec via &lt;a href="https://libreswan.org/wiki/Route-based_VPN_using_VTI" target="_blank" rel="noopener noreferrer"&gt;libreswan&lt;/a&gt; or &lt;a href="https://wiki.strongswan.org/projects/strongswan/wiki/RouteBasedVPN" target="_blank" rel="noopener noreferrer"&gt;strongSwan&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;a name="gre"&gt;&lt;/a&gt;GRE and GRETAP&lt;/h2&gt; &lt;p&gt;Generic Routing Encapsulation, also known as GRE, is defined in &lt;a href="https://tools.ietf.org/html/rfc2784" target="_blank" rel="noopener noreferrer"&gt;RFC 2784&lt;/a&gt;&lt;/p&gt; &lt;p&gt;GRE tunneling adds an additional GRE header between the inside and outside IP headers. In theory, GRE could encapsulate any Layer 3 protocol with a valid Ethernet type, unlike IPIP, which can only encapsulate IP. The GRE header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-576007 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre-1024x81.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre.png" alt="" width="1204" height="95" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre.png 1204w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre-300x24.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre-768x61.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre-1024x81.png 1024w" sizes="(max-width: 1204px) 100vw, 1204px" /&gt;&lt;/p&gt; &lt;p&gt;Note that you can transport multicast traffic and IPv6 through a GRE tunnel.&lt;/p&gt; &lt;p&gt;When the &lt;code&gt;gre&lt;/code&gt; module is loaded, the Linux kernel will create a default device, named &lt;code&gt;gre0&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Here is how to create a GRE tunnel:&lt;/p&gt; &lt;pre&gt;# ip link add name gre1 type gre local remote [seq] key &lt;/pre&gt; &lt;p&gt;While GRE tunnels operate at OSI Layer 3, GRETAP works at OSI Layer 2, which means there is an Ethernet header in the inner header.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-576037 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gretap-1024x69.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gretap.png" alt="" width="1444" height="97" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gretap.png 1444w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gretap-300x20.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gretap-768x52.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gretap-1024x69.png 1024w" sizes="(max-width: 1444px) 100vw, 1444px" /&gt;&lt;/p&gt; &lt;p&gt;Here is how to create a GRETAP tunnel:&lt;/p&gt; &lt;pre&gt;# ip link add name gretap1 type gretap local remote &lt;/pre&gt; &lt;h2&gt;&lt;a name="gre6"&gt;&lt;/a&gt;GRE6 and GRE6TAP&lt;/h2&gt; &lt;p&gt;GRE6 is the IPv6 equivalent of GRE, which allows us to encapsulate any Layer 3 protocol over IPv6. The tunnel header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-576017 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6-1024x77.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6.png" alt="" width="1203" height="91" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6.png 1203w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6-300x23.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6-768x58.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6-1024x77.png 1024w" sizes="(max-width: 1203px) 100vw, 1203px" /&gt;&lt;/p&gt; &lt;p&gt;GRE6TAP, just like GRETAP, has an Ethernet header in the inner header:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-576027 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6tap-1024x67.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6tap.png" alt="" width="1447" height="95" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6tap.png 1447w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6tap-300x20.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6tap-768x50.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gre6tap-1024x67.png 1024w" sizes="(max-width: 1447px) 100vw, 1447px" /&gt;&lt;/p&gt; &lt;p&gt;Here is how to create a GRE tunnel:&lt;/p&gt; &lt;pre&gt;# ip link add name gre1 type gre6 local remote # ip link add name gretap1 type gretap6 local remote &lt;/pre&gt; &lt;h2&gt;&lt;a name="fou"&gt;&lt;/a&gt;FOU&lt;/h2&gt; &lt;p&gt;Tunneling can happen at multiple levels in the networking stack. IPIP, SIT, GRE tunnels are at the IP level, while FOU (foo over UDP) is UDP-level tunneling.&lt;/p&gt; &lt;p&gt;There are some advantages of using UDP tunneling as UDP works with existing HW infrastructure, like &lt;a href="https://en.wikipedia.org/wiki/Network_interface_controller#RSS" target="_blank" rel="noopener noreferrer"&gt;RSS&lt;/a&gt; in NICs, &lt;a href="https://en.wikipedia.org/wiki/Equal-cost_multi-path_routing" target="_blank" rel="noopener noreferrer"&gt;ECMP&lt;/a&gt; in switches, and checksum offload. The developer&amp;#8217;s &lt;a href="https://lwn.net/Articles/614433/" target="_blank" rel="noopener noreferrer"&gt;patch set&lt;/a&gt; shows significant performance increases for the SIT and IPIP protocols.&lt;/p&gt; &lt;p&gt;Currently, the FOU tunnel supports encapsulation protocol based on IPIP, SIT, GRE. An example FOU header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-575987 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/fou.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/fou.png" alt="" width="806" height="68" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/fou.png 806w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/fou-300x25.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/fou-768x65.png 768w" sizes="(max-width: 806px) 100vw, 806px" /&gt;&lt;/p&gt; &lt;p&gt;Here is how to create a FOU tunnel:&lt;/p&gt; &lt;pre&gt;# ip fou add port 5555 ipproto 4 # ip link add name tun1 type ipip remote 192.168.1.1 local 192.168.1.2 ttl 225 encap fou encap-sport auto encap-dport 5555 &lt;/pre&gt; &lt;p&gt;The first command configured a FOU receive port for IPIP bound to 5555; for GRE, you need to set &lt;code&gt;ipproto 47&lt;/code&gt;. The second command set up a new IPIP virtual interface (tun1) configured for FOU encapsulation, with dest port 5555.&lt;/p&gt; &lt;p&gt;&lt;b&gt;NOTE&lt;/b&gt;: FOU is not supported in Red Hat Enterprise Linux.&lt;/p&gt; &lt;h2&gt;&lt;a name="gue"&gt;&lt;/a&gt;GUE&lt;/h2&gt; &lt;p&gt;&lt;a href="https://tools.ietf.org/html/draft-ietf-intarea-gue" target="_blank" rel="noopener noreferrer"&gt;Generic UDP Encapsulation&lt;/a&gt; (GUE) is another kind of UDP tunneling. The difference between FOU and GUE is that GUE has its own encapsulation header, which contains the protocol info and other data.&lt;/p&gt; &lt;p&gt;Currently, GUE tunnel supports inner IPIP, SIT, GRE encapsulation. An example GUE header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-576047 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gue.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gue.png" alt="" width="964" height="66" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/gue.png 964w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gue-300x21.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/gue-768x53.png 768w" sizes="(max-width: 964px) 100vw, 964px" /&gt;&lt;/p&gt; &lt;p&gt;Here is how to create a GUE tunnel:&lt;/p&gt; &lt;pre&gt;# ip fou add port 5555 gue # ip link add name tun1 type ipip remote 192.168.1.1 local 192.168.1.2 ttl 225 encap gue encap-sport auto encap-dport 5555 &lt;/pre&gt; &lt;p&gt;This will set up a GUE receive port for IPIP bound to 5555, and an IPIP tunnel configured for GUE encapsulation.&lt;/p&gt; &lt;p&gt;&lt;b&gt;NOTE&lt;/b&gt;: GUE is not supported in Red Hat Enterprise Linux.&lt;/p&gt; &lt;h2&gt;&lt;a name="geneve"&gt;&lt;/a&gt;GENEVE&lt;/h2&gt; &lt;p&gt;Generic Network Virtualization Encapsulation (GENEVE) supports all of the capabilities of VXLAN, NVGRE, and STT and was designed to overcome their perceived limitations. Many believe GENEVE could eventually replace these earlier formats entirely. The tunnel header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-575997 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/geneve-1024x69.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/geneve.png" alt="" width="1445" height="97" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/geneve.png 1445w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/geneve-300x20.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/geneve-768x52.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/geneve-1024x69.png 1024w" sizes="(max-width: 1445px) 100vw, 1445px" /&gt;&lt;/p&gt; &lt;p&gt;which looks very similar to &lt;a href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/#vxlan" target="_blank" rel="noopener noreferrer"&gt;VXLAN&lt;/a&gt;. The main difference is that the GENEVE header is flexible. It&amp;#8217;s very easy to add new features by extending the header with a new Type-Length-Value (TLV) field. For more details, you can see the latest &lt;a href="https://tools.ietf.org/html/draft-ietf-nvo3-geneve-08" target="_blank" rel="noopener noreferrer"&gt;geneve ietf draft&lt;/a&gt; or refer to this &lt;a href="https://www.redhat.com/en/blog/what-geneve" target="_blank" rel="noopener noreferrer"&gt;What is GENEVE?&lt;/a&gt; article.&lt;/p&gt; &lt;p&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/13/html/networking_with_open_virtual_network/open_virtual_network_ovn"&gt;Open Virtual Network (OVN)&lt;/a&gt; uses GENEVE as default encapsulation. Here is how to create a GENEVE tunnel:&lt;/p&gt; &lt;pre&gt;# ip link add name geneve0 type geneve id remote &lt;/pre&gt; &lt;h2&gt;&lt;a name="erspan"&gt;&lt;/a&gt;ERSPAN and IP6ERSPAN&lt;/h2&gt; &lt;p&gt;Encapsulated Remote Switched Port Analyzer (ERSPAN) uses GRE encapsulation to extend the basic port mirroring capability from Layer 2 to Layer 3, which allows the mirrored traffic to be sent through a routable IP network. The ERSPAN header looks like:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-575977 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/erspan-1024x58.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/erspan.png" alt="" width="1687" height="96" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/erspan.png 1687w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/erspan-300x17.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/erspan-768x44.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/erspan-1024x58.png 1024w" sizes="(max-width: 1687px) 100vw, 1687px" /&gt;&lt;/p&gt; &lt;p&gt;The ERSPAN tunnel allows a Linux host to act as an ERSPAN traffic source and send the ERSPAN mirrored traffic to either a remote host or to an ERSPAN destination, which receives and parses the ERSPAN packets generated from Cisco or other ERSPAN-capable switches. This setup could be used to analyze, diagnose, and detect malicious traffic.&lt;/p&gt; &lt;p&gt;Linux currently supports most features of two ERSPAN versions: v1 (type II) and v2 (type III).&lt;/p&gt; &lt;p&gt;Here is how to create an ERSPAN tunnel:&lt;/p&gt; &lt;pre&gt;# ip link add dev erspan1 type erspan local remote seq key erspan_ver 1 erspan or # ip link add dev erspan1 type erspan local remote seq key erspan_ver 2 erspan_dir erspan_hwid Add tc filter to monitor traffic # tc qdisc add dev handle ffff: ingress # tc filter add dev parent ffff: matchall skip_hw action mirred egress mirror dev erspan1 &lt;/pre&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;Here is a summary of all the tunnels we introduced.&lt;/p&gt; &lt;table border="1"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;Tunnel/Link Type&lt;/th&gt; &lt;th&gt;Outer Header&lt;/th&gt; &lt;th&gt;Encapsulate Header&lt;/th&gt; &lt;th&gt;Inner Header&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;ipip&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;th&gt;None&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;sit&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;th&gt;None&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;ip6tnl&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;th&gt;None&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;vit&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;th&gt;IPsec&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;vit6&lt;/th&gt; &lt;th&gt;IPv6&lt;/th&gt; &lt;th&gt;IPsec&lt;/th&gt; &lt;th&gt;IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;gre&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;th&gt;GRE&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;gretap&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;th&gt;GRE&lt;/th&gt; &lt;th&gt;Ether + IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;gre6&lt;/th&gt; &lt;th&gt;IPv6&lt;/th&gt; &lt;th&gt;GRE&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;gre6tap&lt;/th&gt; &lt;th&gt;IPv6&lt;/th&gt; &lt;th&gt;GRE&lt;/th&gt; &lt;th&gt;Ether + IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;fou&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;th&gt;UDP&lt;/th&gt; &lt;th&gt;IPv4/IPv6/GRE&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;gue&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;th&gt;UDP + GUE&lt;/th&gt; &lt;th&gt;IPv4/IPv6/GRE&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;geneve&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;th&gt;UDP + Geneve&lt;/th&gt; &lt;th&gt;Ether + IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;erspan&lt;/th&gt; &lt;th&gt;IPv4&lt;/th&gt; &lt;th&gt;GRE + ERSPAN&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;ip6erspan&lt;/th&gt; &lt;th&gt;IPv6&lt;/th&gt; &lt;th&gt;GRE + ERSPAN&lt;/th&gt; &lt;th&gt;IPv4/IPv6&lt;/th&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;b&gt;Note&lt;/b&gt;: All configurations in this tutorial are volatile and wonât survive to a server reboot. If you want to make the configuration persistent across reboots, please consider using a networking configuration daemon, such as &lt;a href="https://developer.gnome.org/NetworkManager/stable/" target="_blank" rel="noopener noreferrer"&gt;NetworkManager&lt;/a&gt;, or distribution-specific mechanisms.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Also read: &lt;a href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/"&gt;Introduction to Linux interfaces for virtual networking&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#38;linkname=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#38;linkname=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#38;linkname=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#38;linkname=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#38;linkname=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#38;linkname=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#38;linkname=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#38;linkname=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F27%2Fan-introduction-to-linux-virtual-interfaces-tunnels%2F&amp;#038;title=An%20introduction%20to%20Linux%20virtual%20interfaces%3A%20Tunnels" data-a2a-url="https://developers.redhat.com/blog/2019/03/27/an-introduction-to-linux-virtual-interfaces-tunnels/" data-a2a-title="An introduction to Linux virtual interfaces: Tunnels"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/27/an-introduction-to-linux-virtual-interfaces-tunnels/"&gt;An introduction to Linux virtual interfaces: Tunnels&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YzijAYPeaUU" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Linux has supported many kinds of tunnels, but new users may be confused by their differences and unsure which one is best suited for a given use case. In this article, I will give a brief introduction for commonly used tunnel interfaces in the Linux kernel. There is no code analysis, only a brief introduction [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/27/an-introduction-to-linux-virtual-interfaces-tunnels/"&gt;An introduction to Linux virtual interfaces: Tunnels&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/03/27/an-introduction-to-linux-virtual-interfaces-tunnels/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">575967</post-id><dc:creator>Hangbin Liu</dc:creator><dc:date>2019-03-27T07:00:27Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/27/an-introduction-to-linux-virtual-interfaces-tunnels/</feedburner:origLink></entry><entry><title>The evolution of serverless and FaaS: Knative brings change</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OpxTjYNEFW0/" /><category term="Cloud" /><category term="Containers" /><category term="Knative" /><category term="Kubernetes" /><category term="Microservices" /><category term="Modern App Dev" /><category term="OpenShift" /><category term="Serverless" /><category term="FaaS" /><category term="OpenWhisk" /><category term="serverless" /><author><name>Don Schenck</name></author><id>https://developers.redhat.com/blog/?p=564517</id><updated>2019-03-26T07:00:36Z</updated><published>2019-03-26T07:00:36Z</published><content type="html">&lt;p&gt;Are &lt;a href="https://developers.redhat.com/topics/serverless-architecture/"&gt;serverless&lt;/a&gt; and Function as a Service (FaaS) the same thing?&lt;/p&gt; &lt;p&gt;No, they&amp;#8217;re not.&lt;/p&gt; &lt;p&gt;Wait. Yes, they are.&lt;/p&gt; &lt;p&gt;Frustrating, right? With terms being thrown about at conferences, in articles (I&amp;#8217;m looking at myself right now), conversations, etc., things can be confusing (or, sadly, sometimes misleading). Letâs take a look at some aspects of serverless and FaaS to see where things stand.&lt;/p&gt; &lt;p&gt;&lt;span id="more-564517"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is serverless anyway?&lt;/h2&gt; &lt;p&gt;That&amp;#8217;s simple: It&amp;#8217;s computing without a server. Itâs magic.&lt;/p&gt; &lt;p&gt;Actually, no; thatâs not true. Of course, there is a server (or many servers) involved. One of the tenants of serverless is that the developer need not be concerned with server âstuff.â No need to fuss over RAM usage and scaling and so on. Simply (now that is a loaded word, âsimplyâ) deploy your code and it works.&lt;/p&gt; &lt;p&gt;Hereâs the official definition from the &lt;a href="https://www.cncf.io"&gt;Cloud Native Computing Foundation&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&amp;#8220;Serverless computing refers to the concept of building and running applications that do not require server management. It describes a finer-grained deployment model where applications, bundled as one or more functions, are uploaded to a platform and then executed, scaled, and billed in response to the exact demand needed at the moment.&amp;#8221;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;An important point is the last sentence about executing, scaling, and billing on demand. Until recentlyâthat is, until &lt;a href="https://developers.redhat.com/topics/knative/"&gt;Knative&lt;/a&gt; appeared on the sceneâa &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservice&lt;/a&gt; ran 24&amp;#215;7 and was not, by the above definition, serverless.&lt;/p&gt; &lt;p&gt;Since serverless and FaaS have traditionally been used as interchangeable terms, they were considered one and the same. This much was constant: They both did &lt;em&gt;not&lt;/em&gt; describe a typical microservice that is available all the time. In fact, discussions (arguments?) surfaced about the use of FaaS and/or microservices, with some even going so far as to claim that all microservices should, in fact, be serverless functions. While that may seem extreme to some, it has almost become a moot point. Why?&lt;/p&gt; &lt;h2&gt;Enter Knative serving&lt;/h2&gt; &lt;p&gt;At the time when Google announced the availability of &lt;a href="https://cloud.google.com/knative/"&gt;Knative&lt;/a&gt;, &lt;a href="https://developers.redhat.com/topics/Kubernetes"&gt;Kubernetes&lt;/a&gt;-based platform, FaaS offerings were typically based on small pieces of source code that ran as functions. Compiling them wasn&amp;#8217;t often necessary. &lt;a href="https://openwhisk.apache.org/"&gt;OpenWhisk&lt;/a&gt;âan open source FaaS platformâuses the command &lt;code&gt;wsk action create...&lt;/code&gt;Â to turn, for example, a Node.js file into a function (they&amp;#8217;re called &amp;#8220;Actions&amp;#8221; in OpenWhisk parlance). One small file and one command and you have a function. You don&amp;#8217;t even need to code any HTTP handlers or routes; it&amp;#8217;s all built into the platform. And there&amp;#8217;s one and only one route. The function has one entry and exit point; it&amp;#8217;s not a complex RESTful service with multiple URIs.&lt;/p&gt; &lt;p&gt;Knative disrupted all that by making any service available as a function, in that Knative allows a service to scale to zero after a configured period of time. In other words, the service stops running, which means no CPU cycles, no disk activity,Â and &lt;em&gt;no billing activity during its idle time&lt;/em&gt;. That&amp;#8217;s not a small thing. It is the essence of serverless functions, and suddenly a RESTful service that handles, say, four different routes could now be considered a serverless function.&lt;/p&gt; &lt;p&gt;True, scaling to zero has its own challenge: how to minimize restart time. Thatâs another article altogether.&lt;/p&gt; &lt;p&gt;So, by definition, any service that can scale to zero and respond on demand is serverless (or FaaS or serverless function).&lt;/p&gt; &lt;h2&gt;But wait, there&amp;#8217;s more&lt;/h2&gt; &lt;p&gt;Knative also brings other functionality to the developer: building, eventing,Â and serving are the three parts of Knative. I briefly discussed serving, but building and eventing are important as well.&lt;/p&gt; &lt;p&gt;Eventing, for instance, allows you to fire off services by using events. Put events into a queue and you have a truly event-driven architecture application. If you&amp;#8217;ve ever built apps on a message-based platform (for example, Windows desktop applications) you&amp;#8217;re familiar with the idea of events and messages &amp;#8220;flying all around,&amp;#8221; making a system work. When done right, it&amp;#8217;s a beautiful symphony of harmonious code.&lt;/p&gt; &lt;p&gt;(OK, that last part was a bit over the top, but you get the idea.)&lt;/p&gt; &lt;p&gt;Knative leverages advanced and fast technologies, including &lt;a href="https://developers.redhat.com/topics/service-mesh"&gt;Istio service mesh&lt;/a&gt; and gRPC. Although a developer probably won&amp;#8217;t need to be aware of these things, &lt;em&gt;someone&lt;/em&gt; does, and it &lt;em&gt;does&lt;/em&gt; matter. In short, Knative is more of a platform rather than simply an implementation. It gives you a broad and robust foundation for your own implementation of functions.&lt;/p&gt; &lt;h2&gt;Which one should I use?&lt;/h2&gt; &lt;p&gt;There are reasons for both Knative and, say, something like OpenWhisk. Knative is speeding the evolution (and, likely, the adoption) of serverless/FaaS solutions, while existing technologies such as OpenWhisk remain useful. Further, it remains to be seen if and how traditional FaaS platforms embrace Knative.&lt;/p&gt; &lt;p&gt;As with any technology, itâs up to you to determine what mix of the two is best for you. Armed with knowledge and enabled with opportunities to test these technologies for zero cost, you&amp;#8217;re in a good position to choose and move forward. As the technology evolves, so will your solutions.&lt;/p&gt; &lt;p&gt;For more information about Knative, visit theÂ &lt;a href="https://github.com/knative/"&gt;GitHub repo&lt;/a&gt; and the &lt;a href="https://github.com/knative/docs"&gt;Knative documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#38;linkname=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#38;linkname=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#38;linkname=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#38;linkname=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#38;linkname=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#38;linkname=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#38;linkname=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#38;linkname=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F26%2Fserverless-faas-knative%2F&amp;#038;title=The%20evolution%20of%20serverless%20and%20FaaS%3A%20Knative%20brings%20change" data-a2a-url="https://developers.redhat.com/blog/2019/03/26/serverless-faas-knative/" data-a2a-title="The evolution of serverless and FaaS: Knative brings change"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/26/serverless-faas-knative/"&gt;The evolution of serverless and FaaS: Knative brings change&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OpxTjYNEFW0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Are serverless and Function as a Service (FaaS) the same thing? No, they&amp;#8217;re not. Wait. Yes, they are. Frustrating, right? With terms being thrown about at conferences, in articles (I&amp;#8217;m looking at myself right now), conversations, etc., things can be confusing (or, sadly, sometimes misleading). Letâs take a look at some aspects of serverless and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/26/serverless-faas-knative/"&gt;The evolution of serverless and FaaS: Knative brings change&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/03/26/serverless-faas-knative/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">564517</post-id><dc:creator>Don Schenck</dc:creator><dc:date>2019-03-26T07:00:36Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/26/serverless-faas-knative/</feedburner:origLink></entry><entry><title>Red Hat Summit 2019: Cloud-native Application Development Instructor-Led Labs</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jkYyLFIuNUk/red-hat-summit-2019-labs-cloud-native-app-dev-roadmap.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Decision Manager" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2019_cloud_native_application_development_instructor_led_labs</id><updated>2019-03-26T06:00:03Z</updated><published>2019-03-26T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://reg.summit.redhat.com/" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="389" data-original-width="769" height="161" src="https://1.bp.blogspot.com/-yX0WaXZmaTI/XJj8CSvWUlI/AAAAAAAAth4/4Z1aZQ7VOp061sKNZ-_kMauutZPP46AMgCLcBGAs/s320/Screenshot%2B2019-03-25%2Bat%2B17.04.08.png" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://www.redhat.com/en/summit/2019" target="_blank"&gt;Red Hat Summit 2019&lt;/a&gt; is rocking Boston, MA from May 7-9th in the &lt;a href="https://www.signatureboston.com/BCEC" target="_blank"&gt;Boston Convention and Exhibition Center&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Everything you need to know about the current state of open source enterprise ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you're using, and all the way down to hands-on lab experiences on these technologies.&lt;br /&gt;&lt;br /&gt;This hands-on appeal is what this series of articles is about. It's&amp;nbsp;interesting to take a tour, so starting with this article let's examine a series of instructor-led labs based on a specific theme.&lt;br /&gt;&lt;br /&gt;This week it's a roadmap to&amp;nbsp;&lt;i&gt;cloud-native application development &lt;/i&gt;content.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;The following labs can be found in the &lt;a href="https://summit.redhat.com/conference/sessions" target="_blank"&gt;session catalog online&lt;/a&gt;, by searching on title or filtering on &lt;i&gt;instructor-led labs &lt;/i&gt;and &lt;i&gt;cloud-native app dev.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;h3&gt;Red Hat OpenShift service mesh in action&lt;/h3&gt;&lt;i&gt;You've seen the high-level overview of service mesh and attended the deep dives, now it's time to get your hands dirty and learn by doing. This lab will introduce the capabilities of Red Hat OpenShift service mesh through the incremental development of a microsystems application relying on traffic shaping, security, policy enforcement, and observability features.&lt;br /&gt;&lt;br /&gt;In this lab, you'll learn how to:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Control access using role-based access control, ensuring only those who are permitted can interact with your service.&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;Manage traffic to your services, redirecting traffic transparently to support canary deployment, A/B testing, etc.&lt;/li&gt;&lt;li&gt;Enforce policies on the service interactions, such as the ability to limit the number of requests to a service.&lt;/li&gt;&lt;li&gt;Visualize the behavior of the service mesh to obtain a deeper understanding of the application interactions and identify issues before they significantly impact your users.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;Knowledge of Istio, Kiali, Jaeger, and Grafana will be advantageous for this session.&lt;br /&gt;&lt;br /&gt;Speakers: Erik Jacobs, Kevin Conner, Brian Avery, Jonh Wendell, William DeCoste&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Transitioning existing applications to containersâit's easier than you think&lt;/h3&gt;&lt;i&gt;In this lab, we'll walk through seamlessly containerizing a traditional Tomcat application and deploying it on Red Hat OpenShift Container Platform. You'll take an existing Tomcat application, containerize it, and deploy it onto Red Hat OpenShift Container Platform. At the end of the lab, you'll integrate the application into a continuous integration and continuous delivery (CI/CD) pipeline.&lt;br /&gt;&lt;br /&gt;Speakers: Christopher Ricci, Eric Getchell, Amritpal Jhajj, Eric Deandrea&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Next-gen process management: A microservices approach to business automation&lt;/h3&gt;&lt;i&gt;Business processes are at the heart of every organization, implementing the organizationâs value chain. Within the new modern application development landscape, which is built on top of microservices and containers, management of these business processes is becoming increasingly important. At the same time, we need to move away from traditional business process management (BPM) to benefit from the agility, reliability, and scalability that modern containerized application architectures have to offer.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;In this lab, we'll introduce a new approach to process management based on a containerized, lightweight, distributed architecture. We'll use Red Hat Process Automation Manager to orchestrate, choreograph, manage, and monitor microservices implemented with Red Hat OpenShift Application Runtimes.&lt;br /&gt;&lt;br /&gt;In this lab, you'll learn how to:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Embed Red Hat Process Automation Manager in a Spring Boot application.&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;Use Red Hat Process Automation Manager to orchestrate microservices.&lt;/li&gt;&lt;li&gt;Implement asynchronous, message-driven communication between microservices implemented with Red Hat OpenShift Application Runtimes.&lt;/li&gt;&lt;li&gt;Add observability with distributed tracing.&lt;/li&gt;&lt;li&gt;Add monitoring with Prometheus &amp;amp; Grafana.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;Speakers: Bernard Tison, Maciej Swiderski, Duncan Doyle&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Developing applications on OpenShift as mere mortals&lt;/h3&gt;&lt;i&gt;Many developers face challenges and frustration when learning to develop applications on a platform that's new to them. We've heard from developers that they want to be able to focus on what matters to themâwriting codeârather than on learning the ins and outs of platforms like Kubernetes and OpenShift. If this sounds like you, then join us for this workshop, where you'll learn to use OpenShift Do (odo), a new CLI tool for developers who are writing, building, and deploying applications on OpenShift. Get hands-on experience with the way odo abstracts away Kubernetes and OpenShift concepts while supporting fast, iterative development.&lt;br /&gt;&lt;br /&gt;Speakers: Jan Kleinert, Jorge Morales, Graham Dumpleton&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Build your own Kubernetes Operator&lt;/h3&gt;&lt;i&gt;Codify your operational tactics and container-management best-practices using the Kubernetes Operator pattern. Operators feel like native features to Kubernetes end-users, because they extend the basic platform APIs by taking advantage of the included third-party resource and custom controller abstractions. This session provides architectural overviews, implementation patterns, and a look at a few popular solutions on this topic. Learn how to establish higher-order interfaces that represent the logical domain expertise (and perhaps the ideal product output) of a Kubernetes SRE. Bring a laptop to follow along as we build and distribute container-management tactics and strategies using the Operator Framework and Operator Lifecycle Manager.&lt;br /&gt;&lt;br /&gt;Speaker: Jorge Morales, Marek Jelen, Jan Kleinert, Josh Wood, Ryan Jarvinen&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Stay tuned for more articles with insights into other themes that might interest you enough to register for one of these instructor-led labs at Red Hat Summit 2019.&lt;br /&gt;&lt;br /&gt;Looking forward to seeing you there!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_885rQSr3V4:DsP6pZ0qPHA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_885rQSr3V4:DsP6pZ0qPHA:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_885rQSr3V4:DsP6pZ0qPHA:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=_885rQSr3V4:DsP6pZ0qPHA:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_885rQSr3V4:DsP6pZ0qPHA:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=_885rQSr3V4:DsP6pZ0qPHA:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_885rQSr3V4:DsP6pZ0qPHA:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=_885rQSr3V4:DsP6pZ0qPHA:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_885rQSr3V4:DsP6pZ0qPHA:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_885rQSr3V4:DsP6pZ0qPHA:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=_885rQSr3V4:DsP6pZ0qPHA:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/_885rQSr3V4" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jkYyLFIuNUk" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Summit 2019 is rocking Boston, MA from May 7-9th in the Boston Convention and Exhibition Center. Everything you need to know about the current state of open source enterprise ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you're using, and all the way down to ha...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-03-26T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/_885rQSr3V4/red-hat-summit-2019-labs-cloud-native-app-dev-roadmap.html</feedburner:origLink></entry><entry><title>Kubernetes v1.14: What you need to know</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5K2puwtC_0c/" /><category term="Announcement" /><category term="Kubernetes" /><category term="kubernetes" /><category term="release" /><author><name>Doug Tidwell</name></author><id>https://developers.redhat.com/blog/?p=577957</id><updated>2019-03-25T22:00:47Z</updated><published>2019-03-25T22:00:47Z</published><content type="html">&lt;p&gt;&lt;a href="https://kubernetes.io"&gt;Kubernetes v1.14&lt;/a&gt; was released today. The primary themes of the release are extensibility and supporting more workloads. It includes 31 enhancements, with a record 10 features graduating from beta to stable. Here are the highlights:&lt;/p&gt; &lt;h2&gt;Persistent local storage&lt;/h2&gt; &lt;p&gt;This feature, which was previously available as a beta, is now classified as stable. The primary use cases for persistent local storage are databases and distributed file systems. Obviously, local storage performs better than remote disks, whether that storage is a local SSD delivered by a cloud provider or a disk attached to a bare metal system. This has been in the works since &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; v1.5, so its promotion to stable status is a significant milestone.&lt;/p&gt; &lt;p&gt;&lt;span id="more-577957"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Production-level support for Windows nodes&lt;/h2&gt; &lt;p&gt;If you&amp;#8217;re a &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Red Hat Enterprise Linux&lt;/a&gt; only shop, this feature doesn&amp;#8217;t buy you anything, but the overwhelming majority of enterprises have heterogeneous environments that include Windows workloads. With this feature moving to stable status, you don&amp;#8217;t have to look for a different orchestrator to manage those Windows containers. Kubernetes v1.14 provides improved support for pods, service types, workload controllers, and metrics/quotas, approaching parity with those capabilities for Linux.&lt;/p&gt; &lt;h2&gt;PID limiting now in beta&lt;/h2&gt; &lt;p&gt;One concern of Kubernetes administrators is the allocation of Process IDs (PIDs) on Linux hosts. In the past, there was nothing to stop a process inside a container from creating PIDs. If the system supply of PIDs is depleted, that can cause instability on the host machine even though other resources are not constrained. Administrators can now set defaults for the number of PIDs per pod (beta) and reserve a number of allocatable PIDs per node within a pod (alpha).&lt;/p&gt; &lt;h2&gt;Pod priority and preemption support&lt;/h2&gt; &lt;p&gt;You can now assign priorities to pods so that the Kubernetes controller can make better decisions when the cluster is out of resources. Less important pods can be removed to create room for more important ones.&lt;/p&gt; &lt;h2&gt;Discovery APIs removed from the RBAC infrastructure&lt;/h2&gt; &lt;p&gt;There is a set of APIs that allow unauthenticated access by default. In v1.14, the discovery APIs has been removed from that set to improve privacy and security.&lt;/p&gt; &lt;h2&gt;&lt;code&gt;kustomize&lt;/code&gt; integration with &lt;code&gt;kubectl&lt;/code&gt;&lt;/h2&gt; &lt;p&gt;&lt;a href="https://kustomize.io"&gt;&lt;code&gt;kustomize&lt;/code&gt;&lt;/a&gt; lets you configure resources declaratively. In v1.14, those capabilities are available through &lt;code&gt;kubectl&lt;/code&gt; via the &lt;code&gt;-k&lt;/code&gt; flag or the &lt;code&gt;kustomize&lt;/code&gt; subcommand. See &lt;a href="https://kubectl.docs.kubernetes.io/pages/app_customization/introduction.html"&gt;the App Customization section of the &lt;code&gt;kubectl&lt;/code&gt; docs&lt;/a&gt; for all the details.&lt;/p&gt; &lt;h2&gt;&lt;code&gt;kubectl&lt;/code&gt; plugin mechanism is now stable&lt;/h2&gt; &lt;p&gt;&lt;code&gt;kubectl&lt;/code&gt; plugins are standalone binaries that add subcommands to &lt;code&gt;kubectl&lt;/code&gt;. Those subcommands can provide new and custom features not available in the base &lt;code&gt;kubectl&lt;/code&gt; distribution. &lt;a href="https://kubernetes.io/docs/tasks/extend-kubectl/kubectl-plugins/"&gt;The Extend &lt;code&gt;kubectl&lt;/code&gt; with plugins section of the Kubernetes documentation&lt;/a&gt; explains how it all works.&lt;/p&gt; &lt;h2&gt;Updated &lt;code&gt;kubectl&lt;/code&gt; docs. And a logo. And a mascot.&lt;/h2&gt; &lt;p&gt;The documentation for &lt;code&gt;kubectl&lt;/code&gt; has been rewritten from the ground up. You can find it at &lt;a href="https://kubectl.docs.kubernetes.io"&gt;kubectl.docs.kubernetes.io&lt;/a&gt;. It is published as a series of chapters that take you through everything you can do with &lt;code&gt;kubectl&lt;/code&gt;, including how to manage, customize, and deploy apps; get information about resources; debug containers, and more.&lt;/p&gt; &lt;p&gt;The docs include the new &lt;code&gt;kubectl&lt;/code&gt; logo. It sports an undersea theme, with the new &lt;a href="https://en.wikipedia.org/wiki/Cuttlefish"&gt;cuttlefish&lt;/a&gt;Â mascot swimming past the Kubernetes logo. The mascot is officially pronouncedÂ &lt;em&gt;kubee-cuddle&lt;/em&gt;, likely the death knell for any argument that the end of the command should be pronounced &amp;#8220;control.&amp;#8221;&lt;/p&gt; &lt;h2&gt;How the sausages were made&lt;/h2&gt; &lt;p&gt;For more background on some of the features above, see the issues and their related discussions on GitHub:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/kubernetes/enhancements/issues/121"&gt;Durable (non-shared) local storage management (issue 121)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/kubernetes/enhancements/issues/789"&gt;Harden the default RBAC discovery clusterrolebindings (issue 789)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/kubernetes/enhancements/issues/757"&gt;PID limiting (issue 757)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/kubernetes/enhancements/issues/268"&gt;Pod priority and preemption support (issues 268&lt;/a&gt;Â and &lt;a href="https://github.com/kubernetes/enhancements/issues/564"&gt;564&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/kubernetes/enhancements/issues/116"&gt;Support Windows Server Containers for K8s (issue 116)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#38;linkname=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#38;linkname=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#38;linkname=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#38;linkname=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#38;linkname=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#38;linkname=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#38;linkname=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#38;linkname=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fkubernetes-v1-14-what-you-need-to-know%2F&amp;#038;title=Kubernetes%20v1.14%3A%20What%20you%20need%20to%20know" data-a2a-url="https://developers.redhat.com/blog/2019/03/25/kubernetes-v1-14-what-you-need-to-know/" data-a2a-title="Kubernetes v1.14: What you need to know"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/25/kubernetes-v1-14-what-you-need-to-know/"&gt;Kubernetes v1.14: What you need to know&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5K2puwtC_0c" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Kubernetes v1.14 was released today. The primary themes of the release are extensibility and supporting more workloads. It includes 31 enhancements, with a record 10 features graduating from beta to stable. Here are the highlights: Persistent local storage This feature, which was previously available as a beta, is now classified as stable. The primary use [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/25/kubernetes-v1-14-what-you-need-to-know/"&gt;Kubernetes v1.14: What you need to know&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/03/25/kubernetes-v1-14-what-you-need-to-know/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">577957</post-id><dc:creator>Doug Tidwell</dc:creator><dc:date>2019-03-25T22:00:47Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/25/kubernetes-v1-14-what-you-need-to-know/</feedburner:origLink></entry><entry><title>drools.js: Towards a Polyglot Drools on GraalVM (with Bonus Tech-Lead Prank)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/w6TSXWpiZjE/droolsjs-towards-polyglot-drools-on.html" /><category term="#AI" scheme="searchisko:content:tags" /><category term="#DroolsAI" scheme="searchisko:content:tags" /><category term="#graalvm" scheme="searchisko:content:tags" /><category term="#javascript" scheme="searchisko:content:tags" /><category term="#jBPM" scheme="searchisko:content:tags" /><category term="#js" scheme="searchisko:content:tags" /><category term="#polyglot" scheme="searchisko:content:tags" /><category term="#quarkus" scheme="searchisko:content:tags" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Edoardo Vacchi</name></author><id>searchisko:content:id:jbossorg_blog-drools_js_towards_a_polyglot_drools_on_graalvm_with_bonus_tech_lead_prank</id><updated>2019-03-25T16:50:23Z</updated><published>2019-03-25T16:48:00Z</published><content type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://draft.blogger.com/blogger.g?blogID=5869426" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div align="center" style="margin-bottom: 0in;"&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-HjXorrXHODA/XJj_HO0JWKI/AAAAAAAACog/71NE5yolY_EDphDn8gzc-zpHI8nuwKBwQCLcBGAs/s1600/rule-engines-nodejs.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="700" data-original-width="500" height="640" src="https://1.bp.blogspot.com/-HjXorrXHODA/XJj_HO0JWKI/AAAAAAAACog/71NE5yolY_EDphDn8gzc-zpHI8nuwKBwQCLcBGAs/s640/rule-engines-nodejs.jpg" width="456" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;&lt;div align="center" style="margin-bottom: 0in;"&gt;&lt;i&gt;Image courtesy of &lt;/i&gt;&lt;a href="https://twitter.com/desmax74/status/730344025492992000/photo/1"&gt;&lt;span style="color: #1155cc;"&gt;&lt;i&gt;&lt;u&gt;Massimiliano DessÃ¬&lt;/u&gt;&lt;/i&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div align="center" style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;i&gt;You can find the full source code for this blog post in the &lt;/i&gt;&lt;a href="https://github.com/kiegroup/submarine-examples"&gt;&lt;span style="color: #1155cc;"&gt;&lt;i&gt;&lt;u&gt;submarine-examples&lt;/u&gt;&lt;/i&gt;&lt;/span&gt;&lt;/a&gt;&lt;i&gt;repository. &lt;/i&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;Different programming languages are better for different purposes. Imagine how hard would it be to query a database using an imperative language: luckily, we use SQL for that. Now, imagine how useless would a rule engine be, if defining rules were not convenient! This is the reason why Drools comes with its own custom language, the DRL. The &lt;i&gt;Drools Rule Language&lt;/i&gt; is in a so-called &lt;i&gt;domain-specific language&lt;/i&gt;, a special-purpose programming language specifically designed to make interaction with a rule engine easier.&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;In particular, a rule is made of two main parts, the&lt;i&gt; condition&lt;/i&gt; and the&lt;i&gt; consequence.&lt;/i&gt;&lt;/div&gt;&lt;script src="https://gist.github.com/evacchi/f2afe12813146061aa43b2cd89c2cd71.js?file=rule.drl"&gt;&lt;/script&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0in;"&gt;The condition is a list of logic predicates, usually pattern matches, while the consequence is written using an imperative language, usually Java.&lt;/div&gt;&lt;h2 class="western"&gt;&lt;a href="https://draft.blogger.com/null" name="_g2evelohutii"&gt;&lt;/a&gt;An Abstract Rule Engine&lt;/h2&gt;&lt;div style="margin-bottom: 0in;"&gt;Rules are what really &lt;i&gt;make&lt;/i&gt; a rule engine. After all, that's what a &lt;i&gt;rule&lt;/i&gt; engine does: processing rules. Thus, it might sound &lt;i&gt;kind&lt;/i&gt; of logical for the &lt;i&gt;engine&lt;/i&gt; to be a bit entangled with the&lt;i&gt; language&lt;/i&gt; for rule definitions. Our engine is&lt;i&gt; not&lt;/i&gt; specially tied to the DRL; but it used to.&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;In the last year or so, we spent a lot of time unbundling the innards of the DRL from the guts of the Drools core. The result of this effort is what we called the &lt;b&gt;Canonical Model&lt;/b&gt;; that is, an abstract representation of the components that make up a rule engine, including rule definitions. Incidentally, this also paved the way for supporting &lt;a href="http://www.graalvm.org/"&gt;&lt;span style="color: #1155cc;"&gt;&lt;u&gt;GraalVM&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;and the &lt;a href="https://quarkus.io/"&gt;&lt;span style="color: #1155cc;"&gt;&lt;u&gt;Quarkus&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;framework; but our goal was also different. We wanted to &lt;b&gt;abstract our engine from the rule language&lt;/b&gt;. &lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://draft.blogger.com/blogger.g?blogID=5869426" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;/a&gt;&lt;/div&gt;Internally, the DRL is now translated into the &lt;b&gt;canonical representation&lt;/b&gt;; but, &lt;a href="http://blog.athico.com/2019/03/quarking-drools-how-we-turned-13-year.html"&gt;&lt;span style="color: #1155cc;"&gt;&lt;u&gt;as we said previously&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;, this canonical model is described using Java code. While this representation is &lt;b&gt;not currently intended to be hand-coded&lt;/b&gt;, it is very possible to do so. The following is a simple rewriting of the previous DRL rule. &lt;/div&gt;&lt;script src="https://gist.github.com/evacchi/f2afe12813146061aa43b2cd89c2cd71.js?file=rule.java"&gt;&lt;/script&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0in;"&gt;As you can see, although the rule definition is now &lt;i&gt;embedded&lt;/i&gt; in a Java "host" language, it still shows the main features of a DRL definition, namely, the &lt;i&gt;logic condition&lt;/i&gt; and the &lt;i&gt;imperative consequence&lt;/i&gt;(introduced by the &lt;span style="font-family: &amp;quot;roboto mono&amp;quot; , serif;"&gt;on...execute&lt;/span&gt;pair) In other words, this is a so-called &lt;i&gt;embedded or &lt;/i&gt;&lt;a href="https://martinfowler.com/bliki/DomainSpecificLanguage.html"&gt;&lt;span style="color: #1155cc;"&gt;&lt;i&gt;&lt;u&gt;internal domain-specific language&lt;/u&gt;&lt;/i&gt;&lt;/span&gt;&lt;/a&gt;.&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;A small &lt;b&gt;disclaimer&lt;/b&gt; applies: the code above works, but our translator takes extra steps for best performance, such as introducing &lt;b&gt;indexes&lt;/b&gt;. In fact, one of the reasons why we&lt;b&gt; do not &lt;/b&gt;intend this API for public consumption is that, currently, a naive rewrite like this may produce inefficient rules.&lt;/div&gt;&lt;h2 class="western"&gt;&lt;a href="https://draft.blogger.com/null" name="_7mg637k1x7h6"&gt;&lt;/a&gt;A Polyglot Automation Platform&lt;/h2&gt;&lt;div style="margin-bottom: 0in;"&gt;As part of our journey experimenting with our programming model, we wanted to see whether it was feasible to&lt;b&gt; interact with our engine using different programming languages&lt;/b&gt;. DRL aside, the canonical model rule definition API is pure-Java. &lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;But GraalVM is &lt;i&gt;not&lt;/i&gt; only a tool to generate &lt;i&gt;native binaries&lt;/i&gt;: in fact, this is only &lt;i&gt;one&lt;/i&gt;of the capabilities of this terrific project. GraalVM is, first and foremost, the &lt;a href="https://dl.acm.org/citation.cfm?id=2509581"&gt;&lt;span style="color: #1155cc;"&gt;&lt;i&gt;&lt;u&gt;one VM to rule them all&lt;/u&gt;&lt;/i&gt;&lt;/span&gt;&lt;/a&gt;: that is, a &lt;b&gt;polyglot&lt;/b&gt;runtime, with first-class support for both JVM languages and many other dynamic programming languages, with a state-of-the-art &lt;b&gt;JIT&lt;/b&gt;compiler, that &lt;a href="https://youtu.be/mMmOntDWSgw?t=611"&gt;&lt;span style="color: #1155cc;"&gt;&lt;u&gt;easily compares or exceeds the performance of the industry standards&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;. For instance, there is already support for R, Ruby, JavaScript and Python; and, compared to writing a JIT compiler from scratch, the &lt;a href="https://www.graalvm.org/docs/graalvm-as-a-platform/implement-language/"&gt;&lt;span style="color: #1155cc;"&gt;&lt;u&gt;Truffle framework&lt;/u&gt;&lt;/span&gt;&lt;/a&gt; makes it terribly easy to write your own, and fine-tuning it to perfection.&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://draft.blogger.com/blogger.g?blogID=5869426" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;/a&gt;&lt;/div&gt;GraalVM gave us &lt;b&gt;a great occasion&lt;/b&gt;to show how easy could it be to&lt;b&gt; make Drools polyglot&lt;/b&gt;, and, above all, to &lt;b&gt;play an awful practical joke&lt;/b&gt; on our beloved, hard-working, conference-speaking, JavaScript-hating, resident Java Champion and tech lead &lt;b&gt;Mario&lt;/b&gt;!&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;Enter &lt;a href="https://github.com/kiegroup/submarine-examples"&gt;&lt;span style="color: #1155cc;"&gt;&lt;u&gt;&lt;b&gt;drools.js&lt;/b&gt;&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;&lt;b&gt;: &lt;/b&gt;&lt;/div&gt;&lt;script src="https://gist.github.com/evacchi/f2afe12813146061aa43b2cd89c2cd71.js?file=drools.js"&gt;&lt;/script&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0in;"&gt;And here's a picture of Mario screaming in fear at the monster we have created&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-sLpEcz2xzXU/XJj_4oeWxlI/AAAAAAAACoo/5nG2Alw_2Cc20h8MCQxN9UTSJ37giA_ygCLcBGAs/s1600/IMG-20190305-WA0006.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="739" data-original-width="1600" height="294" src="https://4.bp.blogspot.com/-sLpEcz2xzXU/XJj_4oeWxlI/AAAAAAAACoo/5nG2Alw_2Cc20h8MCQxN9UTSJ37giA_ygCLcBGAs/s640/IMG-20190305-WA0006.jpg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div align="center" style="margin-bottom: 0in;"&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;Jokes aside, this experiment is a window over one of the many possible futures of our platform. The world of application development today is &lt;i&gt;polyglot&lt;/i&gt;. We cannot ignore this, and we are trying to understand how to reach a wider audience with our technologies, be it our rule engine, or our workflow orchestration engine; in fact, we are doing the same experiments with other parts of the platform, such as &lt;b&gt;jBPM&lt;/b&gt;. &lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;jBPM provides its own DSL for workflow definition. Although this is, again, work in progress, it shows a lot of promise as well. Behold: &lt;b&gt;jbpm.js&lt;/b&gt;!&lt;/div&gt;&lt;script src="https://gist.github.com/evacchi/f2afe12813146061aa43b2cd89c2cd71.js?file=jbpm.js"&gt;&lt;/script&gt;&lt;br /&gt;&lt;h2 class="western"&gt;&lt;a href="https://draft.blogger.com/null" name="_mi7kkvytuldz"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;div style="margin-bottom: 0in;"&gt;The DRL has served its purpose for a very long time, but we are already providing different ways to interact with our powerful engine, such as DMN and PMML; but power users will always want to reach for finer tuning and write their own rules. &lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;The canonical model API is still a work-in-progress, and, above all, an internal API that is &lt;i&gt;&lt;u&gt;not&lt;/u&gt;&lt;/i&gt;intended for human consumption; but, if there is enough interest, we&lt;i&gt;do&lt;/i&gt; plan to work further to provide a more convenient embedded DSL for rule definition. Through the power of GraalVM, we will be able to realize an embedded DSL that is just as writable in Java as &lt;i&gt;any &lt;/i&gt;other language that GraalVM supports. &lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;And this includes JavaScript; sorry Mario!&lt;/div&gt;&lt;div style="margin-bottom: 0in;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;style type="text/css"&gt;h2 { margin-top: 0.25in; margin-bottom: 0.08in; direction: ltr; line-height: 100%; text-align: left; break-inside: avoid; background: transparent none repeat scroll 0% 0%; break-after: avoid; }h2.western { font-size: 16pt; font-weight: normal; }h2.cjk { font-size: 16pt; font-weight: normal; }h2.ctl { font-size: 16pt; }p { margin-bottom: 0.1in; line-height: 115%; background: transparent none repeat scroll 0% 0%; }a:link { color: rgb(0, 0, 128); text-decoration: underline; }&lt;/style&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=SeFMVXZNDBc:Uf2h6wuSXpA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=SeFMVXZNDBc:Uf2h6wuSXpA:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=SeFMVXZNDBc:Uf2h6wuSXpA:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=SeFMVXZNDBc:Uf2h6wuSXpA:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=SeFMVXZNDBc:Uf2h6wuSXpA:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=SeFMVXZNDBc:Uf2h6wuSXpA:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=SeFMVXZNDBc:Uf2h6wuSXpA:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=SeFMVXZNDBc:Uf2h6wuSXpA:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=SeFMVXZNDBc:Uf2h6wuSXpA:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=SeFMVXZNDBc:Uf2h6wuSXpA:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/SeFMVXZNDBc" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/w6TSXWpiZjE" height="1" width="1" alt=""/&gt;</content><summary>Image courtesy of Massimiliano DessÃ¬ You can find the full source code for this blog post in the submarine-examplesrepository. Different programming languages are better for different purposes. Imagine how hard would it be to query a database using an imperative language: luckily, we use SQL for that. Now, imagine how useless would a rule engine be, if defining rules were not convenient! This is t...</summary><dc:creator>Edoardo Vacchi</dc:creator><dc:date>2019-03-25T16:48:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/SeFMVXZNDBc/droolsjs-towards-polyglot-drools-on.html</feedburner:origLink></entry><entry><title>Dive into developer-focused sessions at Red Hat Summit</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/R-DXFYftNfI/" /><category term="Events" /><category term="Red Hat Summit" /><category term="red hat summit" /><author><name>Jesse Williams</name></author><id>https://developers.redhat.com/blog/?p=577947</id><updated>2019-03-25T07:03:01Z</updated><published>2019-03-25T07:03:01Z</published><content type="html">&lt;p&gt;&lt;a href="https://www.redhat.com/en/summit/2019"&gt;Red Hat Summit&lt;/a&gt; is just around the corner, and itâs shaping up to be best Red Hat developer event ever. This year, attendees will get to choose from more than 300 sessions, not to mention booth presentations, parties, labs, and training.&lt;/p&gt; &lt;p&gt;To help you cut through the clutter, weâve created a list of developer specific activities and sessions that will help you shape your Red Hat Summit experience. Most of these sessions are part of the Cloud-Native App Dev track, with a few other sessions that we think will appeal to you as a developer. For more information on these sessions, visit the &lt;a href="https://summit.redhat.com/conference/sessions"&gt;Red Hat Summit session listing page&lt;/a&gt; and sort by &amp;#8220;cloud-native app dev&amp;#8221; track.&lt;span id="more-577947"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Breakout Sessions&lt;/b&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiQWR2YW5jZWQgUGlwZWxpbmVzIn0%3D"&gt;Advanced pipelines for hypothesis-driven development on Kubernetes and OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiIC5ORVQgQ29yZSBEZXZlbG9wbWVudCAifQ%3D%3D"&gt;An introduction to .NET core development on Openshift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiSW50cm9kdWNpbmcgQ29kZVJlYWR5IHBvcnRmb2xpbyJ9"&gt;Introducing CodeReady portfolio: The tools to code your way&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiTW9kZXJuIENsb3VkLU5hdGl2ZSBBcHAgRGV2In0%3D"&gt;Modern cloud-native app dev&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiUG9zdC1SRVNUIE1pY3Jvc2VydmljZXMifQ%3D%3D"&gt;Post-REST microservices and event-driven architecture&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiU2VydmljZSBNZXNoIGFuZCBTaWRlY2FycyJ9"&gt;Service mesh and sidecars with Istio and Envoy&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiQnVpbGQgUGlwZWxpbmUgd2l0aCBLbmF0aXZlIn0%3D"&gt;Simplify your Red Hat OpenShift build pipeline with Knative&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiU3RyZWFtbGluZSBjbG91ZC1uYXRpdmUgYXBwbGljYXRpb24gIn0%3D"&gt;Streamline cloud-native application development with CodeReady Workspaces&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiT3BlblNoaWZ0IGFuZCBSb2FkbWFwIn0%3D"&gt;What developers need to know about OpenShift and roadmap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnsidHJhY2siOlsiZTM5NmJkY2QtZmFmZi00YjA0LThkMDQtMTc4MjRiMjNlZTU3Il19LCJrZXl3b3JkIjoiNSB3YXlzIHRoYXQgUmVkIEhhdCJ9"&gt;5 ways that Red Hat makes Visual Studio Code awesome&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;(Not part of Cloud-Native App Development track)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiR2V0dGluZyByZWFkeSBmb3IgYSByZXZvbHV0aW9uIn0%3D"&gt;Getting ready for a revolution: How developers will shape IT in the next 5 years and beyond&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiTGludXggOCBCZXRhIGNvbnRhaW5lciB0b29scyAifQ%3D%3D"&gt;Red Hat Enterprise Linux 8 Beta container tools&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoidG9vbHNldHM6IEMrKywgR28sIGFuZCBSdXN0ICJ9"&gt;Developing applications for Red Hat Enterprise Linux 8 Beta using the new toolsets: C++, Go, and Rust&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiSmF2YSBDaGVja3BvaW50aW5nIn0%3D"&gt;Java checkpoint/restore: Start your cloud-based Java apps faster&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiQWdpbGUgTWluZHNldCBhbmQgUHJvZ3JhbW1pbmcifQ%3D%3D"&gt;Agile mindset and programming&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiQSBtb2Rlcm4gZGlsZW1tYToifQ%3D%3D"&gt;A modern dilemma: When to use a rules engine vs. machine learning&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Workshops&lt;/b&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRGVidWdnaW5nIE1pY3Jvc2VydmljZXMgIn0%3D"&gt;Debugging microservices applications on Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiQSBIYW5kcy1vbiBNaWNyb3NlcnZpY2VzIFdvcmtzaG9wIn0%3D"&gt;Verily, ye be a knavish, tickle-brained, pantaloon: A hands-on microservices workshop&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRGVsaXZlciBDbG91ZC1OYXRpdmUgTWljcm9zZXJ2aWNlcyJ9"&gt;Deliver cloud-native microservices with Knative on Red Hat Openshift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRWNsaXBzZSBWZXJ0LngsIEVjbGlwc2UgQ2hlIn0%3D"&gt;Develop and deploy cloud-native, reactive applications with Eclipse Vert.x, Eclipse Che, and Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Birds of a Feather Sessions&lt;/b&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiU21hY2tkb3duIFZJIn0%3D"&gt;Cloud-native smackdown VI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiT3VyIGxpZmUgd2l0aCBJc3RpbywgS2kifQ%3D%3D"&gt;Our life with Istio, Kiali, Jaeger, and the Red Hat OpenShift Service Mesh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRGV2U2VjT3BzIE1lYW4gZm9yIFlvdT8ifQ%3D%3D"&gt;What does DevSecOps mean for you?&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRGV2ZWxvcGluZyBhbmQgcnVubmluZyBjbG91ZC1uYXRpdmUifQ%3D%3D"&gt;Developing and running cloud-native apps on Openshift in Red Hat&amp;#8217;s IT organization&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiQnVpbGRpbmcgQXBwbGljYXRpb24gTWFuYWdlbWVudCJ9"&gt;Building application management and deployment strategies at the speed of OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiQ29udGFpbmVyIFJ1bnRpbWVzIGEifQ%3D%3D"&gt;Container runtimes and Red Hat CoreOS&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Mini Sessions&lt;/b&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiU2l6aW5nIHlvdXIgYXBwbGljYXRpb24ifQ%3D%3D"&gt;Sizing your applications on Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRnJhdWQgRGV0ZWN0aW9uIn0%3D"&gt;Modern fraud detection: Kubeflow and Red Hat OpenShift GPU containers&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRXZlbnQtRHJpdmVuIERldmVsb3BtZW50In0%3D"&gt;Event-driven development: Deploy rules using serverless architecture&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiIEFwcGxpY2F0aW9uIERldmVsb3BtZW50IHdpdGggSmFlZ2VyICJ9"&gt;Vert.x application development with Jaeger distributed Tracing&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoid2FsayBpbnRvIGEgcHViIn0%3D"&gt;Three containers walk into a pubâ¦&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiTXkgQXBwIERvZXNuJ3QgV29yayJ9"&gt;Helpâmy app doesn&amp;#8217;t work in the cloud&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiUGVyc2lzdGVudCBkYXRhIGltcGxpY2F0aW9ucyJ9"&gt;Persistent data implications for cloud-native apps and microservices&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiUnVubmluZyB5b3VyIG93biBEYXRhYmFzZS1hcy1hLVNlcnZpY2UgIn0%3D"&gt;Running your own Database-as-a-Service on Red Hat OpenShift with the Crunchy PostgreSQL Operator&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiTW9kZXJuaXppbmcgY29tcGxleCBsZWdhY3kgYXBwbGljYXRpb24ifQ%3D%3D"&gt;Modernizing complex legacy applications&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiQ29udGFpbmVyIFdpbGRmaXJlIn0%3D"&gt;Controlling a container wildfire&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRmluYW5jaWFsIEFQSXMgc2VjdXJpdHkifQ%3D%3D"&gt;Financial APIs security with PSD2, open banking, and OpenID ConnectâChallenges and opportunities&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Roadmaps&lt;/b&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoia25vdyBhYm91dCBNaWNyb1Byb2ZpbGUifQ%3D%3D"&gt;What developers need to know about MicroProfile, Enterprise Java/JakartaEE, JBoss EAP, and roadmap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiYWJvdXQgT3BlblNoaWZ0IGFuZCBSb2FkbWFwIn0%3D"&gt;What developers need to know about Red Hat OpenShift and roadmap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiY2xvdWQtbmF0aXZlIEphdmEgZnV0dXJlIn0%3D"&gt;Quarkusâthe framework and stack for a true cloud-native Java future&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiSXN0aW8gYW5kIHRoZSBGdXR1cmUgb2YgT3BlblNoaWZ0In0%3D"&gt;Istio and the Future of OpenShift Service Mesh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiT3BlblNoaWZ0IFJvYWRtYXA6ICJ9"&gt;OpenShift Roadmap: What the next year means to you, to us, and the industry&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Instructor-Led Labs&lt;/b&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiVHJhbnNpdGlvbmluZyBFeGlzdGluZyBBcHBsaWNhdGlvbnMgdG8gQ29udGFpbmVycyJ9"&gt;Transitioning existing applications to containersâIt&amp;#8217;s easier than you think&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiRGV2ZWxvcGluZyBBcHBsaWNhdGlvbnMgb24gT3BlIn0%3D"&gt;Developing applications on OpenShift as mere mortals&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiTmV4dC1HZW4gUHJvY2VzcyBNYW5hZ2VtZW50OiJ9"&gt;Next-gen process management: A microservices approach to business automation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;(Not part of Cloud-Native App Dev track)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://summit.redhat.com/conference/sessions?p1=eyJzcGVha2VyIjpbXSwidGltZXNsb3QiOltdLCJkYXkiOltdLCJyb29tIjpbXSwibG9jYXRpb24iOltdLCJzdGFydCI6IiIsImZpbmlzaCI6IiIsInBhZ2VudW1iZXIiOjEsImNhdGVnb3JpZXMiOnt9LCJrZXl3b3JkIjoiTGV2ZXJhZ2luZyBSZWQgSGF0IEVudGVycHJpc2UgTGludXggIn0%3D"&gt;Leveraging Red Hat Enterprise Linux 8 Beta AppStreams and containers for app dev&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you have any questions about which sessions you should attend, feel free to stop by the Red Hat Developer booth. If you are not able to attend a specific session due to overlap, donât worry, we will be posting all of our sessions online after Summit. You can access a full list of Red Hat Summit sessions or register &lt;a href="https://www.redhat.com/en/summit/2019?intcmp=701f2000000u6qFAAQ"&gt;here.&lt;/a&gt;&lt;br /&gt; &lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#38;linkname=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#38;linkname=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#38;linkname=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#38;linkname=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#38;linkname=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#38;linkname=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#38;linkname=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#38;linkname=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fdive-into-developer-focused-sessions-at-red-hat-summit%2F&amp;#038;title=Dive%20into%20developer-focused%20sessions%20at%20Red%20Hat%20Summit" data-a2a-url="https://developers.redhat.com/blog/2019/03/25/dive-into-developer-focused-sessions-at-red-hat-summit/" data-a2a-title="Dive into developer-focused sessions at Red Hat Summit"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/25/dive-into-developer-focused-sessions-at-red-hat-summit/"&gt;Dive into developer-focused sessions at Red Hat Summit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/R-DXFYftNfI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat Summit is just around the corner, and itâs shaping up to be best Red Hat developer event ever. This year, attendees will get to choose from more than 300 sessions, not to mention booth presentations, parties, labs, and training. To help you cut through the clutter, weâve created a list of developer specific [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/25/dive-into-developer-focused-sessions-at-red-hat-summit/"&gt;Dive into developer-focused sessions at Red Hat Summit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/03/25/dive-into-developer-focused-sessions-at-red-hat-summit/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">577947</post-id><dc:creator>Jesse Williams</dc:creator><dc:date>2019-03-25T07:03:01Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/25/dive-into-developer-focused-sessions-at-red-hat-summit/</feedburner:origLink></entry><entry><title>Using .NET PInvoke for Linux system functions</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nUeUxm4y3P4/" /><category term=".NET Core" /><category term="C" /><category term="C#" /><category term="Developer Tools" /><category term="Red Hat Enterprise Linux" /><category term=".NET" /><category term="PInvoke" /><author><name>Tom Deseyn</name></author><id>https://developers.redhat.com/blog/?p=568897</id><updated>2019-03-25T07:01:22Z</updated><published>2019-03-25T07:01:22Z</published><content type="html">&lt;p&gt;If you&amp;#8217;ve developed Windows applications with .NET, you may have found yourself in a situation where the framework did not provide the APIs you needed. When that happens, you first need to identify the system APIs and then make them available using PInvoke. A website like &lt;a href="https://pinvoke.net"&gt;pinvoke.net&lt;/a&gt; provides copy-and-pasteable code snippets for many Win32 API functions.&lt;/p&gt; &lt;p&gt;.NET Platform Invoke (PInvoke) makes it easy to consume native libraries. In this article, we&amp;#8217;ll take a look at using PInvoke for &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; system functions.&lt;/p&gt; &lt;p&gt;&lt;span id="more-568897"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;PInvoking Linux&lt;/h2&gt; &lt;p&gt;In case you are not familiar with PInvoke, let&amp;#8217;s look at a simple example:&lt;/p&gt; &lt;pre&gt;[DllImport("mylibrary")] public static extern int foo(); &lt;/pre&gt; &lt;p&gt;This makes available the function &lt;code&gt;foo&lt;/code&gt; from the native library &lt;code&gt;mylibrary&lt;/code&gt;. This function accepts no arguments and returns an &lt;code&gt;int&lt;/code&gt;. .NET takes care of marshaling the argument types. It is possible to use managed types (like &lt;code&gt;strings&lt;/code&gt;) in these signatures, which will be automagically marshaled.&lt;/p&gt; &lt;p&gt;PInvoke works at the application binary interface (ABI) level: It respects the binary calling conventions of the platform on which it is running.&lt;/p&gt; &lt;p&gt;Linux is a UNIX flavor operating system. It provides many of the APIs prescribed by &lt;a href="https://en.wikipedia.org/wiki/POSIX"&gt;POSIX&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Single_UNIX_Specification"&gt;SUS&lt;/a&gt;;Â however, these APIs are defined using the C programming language. They are not APIs at the binary level (ABIs).&lt;/p&gt; &lt;p&gt;For example, the standards describe that there should be positive values for indicating certain types of errors. These values are named (for example,Â &lt;code&gt;EAGAIN&lt;/code&gt;), but their values are not defined. This means different platforms can (and will) have different values for these names. This makes it impossible to add a &lt;code&gt;const int&lt;/code&gt; to a C# file that has the correct value for all platforms.&lt;/p&gt; &lt;p&gt;Another example isÂ &lt;code&gt;struct&lt;/code&gt;, which is used in the API to define a number of fields; however, the order is not fixed, and platforms are allowed to add extra fields. So again, we can&amp;#8217;t describe a &lt;code&gt;struct&lt;/code&gt; in C# that matches the native &lt;code&gt;struct&lt;/code&gt; on all platforms.&lt;/p&gt; &lt;p&gt;The generic way to solve this is to introduce a native shim library. This library provides its own set of functions, constants, and structs that are platform-independent with a fixed ABI. This API gets PInvoked by .NET. Within the library, this API calls the native functions.&lt;/p&gt; &lt;p&gt;If you want to PInvoke the system C library without using a shim, you can use &lt;code&gt;libc&lt;/code&gt; as the library name. The .NET Core runtime maps this to the system C library. For example, we can expose the &lt;a href="http://man7.org/linux/man-pages/man2/kill.2.html"&gt;kill&lt;/a&gt; function as follows:&lt;/p&gt; &lt;pre&gt;[DllImport("libc", SetLastError = true))] public static extern int kill(int pid, int sig); &lt;/pre&gt; &lt;p&gt;&lt;code&gt;SetLastError&lt;/code&gt; means the function uses &lt;a href="http://man7.org/linux/man-pages/man3/errno.3.html"&gt;errno&lt;/a&gt; to indicate what went wrong. &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.marshal.getlastwin32error?view=netcore-2.1"&gt;Marshal.GetLastWin32Error&lt;/a&gt; can be used to retrieve &lt;code&gt;errno&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;Mono.Posix.NETStandard&lt;/h2&gt; &lt;p&gt;The &lt;em&gt;Mono.Posix.NETStandard&lt;/em&gt; package provides system functions. It uses native shims to work across a number of platforms. If we download the package from &lt;a href="https://www.nuget.org"&gt;nuget.org&lt;/a&gt;, we can take a look inside:&lt;/p&gt; &lt;pre&gt;$ unzip -l mono.posix.netstandard.1.0.0.nupkg Archive: mono.posix.netstandard.1.0.0.nupkg Length Date Time Name --------- ---------- ----- ---- 516 02-28-2018 15:18 _rels/.rels 814 02-28-2018 15:18 Mono.Posix.NETStandard.nuspec 13376 02-28-2018 15:18 lib/net40/Mono.Posix.NETStandard.dll 13376 02-28-2018 15:18 ref/net40/Mono.Posix.NETStandard.dll 189504 02-28-2018 15:18 ref/netstandard2.0/Mono.Posix.NETStandard.dll 189504 02-28-2018 15:18 runtimes/linux-arm/lib/netstandard2.0/Mono.Posix.NETStandard.dll 183240 02-28-2018 15:18 runtimes/linux-arm/native/libMonoPosixHelper.so 189504 02-28-2018 15:18 runtimes/linux-arm64/lib/netstandard2.0/Mono.Posix.NETStandard.dll 246736 02-28-2018 15:18 runtimes/linux-arm64/native/libMonoPosixHelper.so 189504 02-28-2018 15:18 runtimes/linux-armel/lib/netstandard2.0/Mono.Posix.NETStandard.dll 236480 02-28-2018 15:18 runtimes/linux-armel/native/libMonoPosixHelper.so 189504 02-28-2018 15:18 runtimes/linux-x64/lib/netstandard2.0/Mono.Posix.NETStandard.dll 920882 02-28-2018 15:18 runtimes/linux-x64/native/libMonoPosixHelper.so 189504 02-28-2018 15:18 runtimes/linux-x86/lib/netstandard2.0/Mono.Posix.NETStandard.dll 766620 02-28-2018 15:18 runtimes/linux-x86/native/libMonoPosixHelper.so 189504 02-28-2018 15:18 runtimes/osx/lib/netstandard2.0/Mono.Posix.NETStandard.dll 535888 02-28-2018 15:18 runtimes/osx/native/libMonoPosixHelper.dylib 189504 02-28-2018 15:18 runtimes/win-x64/lib/netstandard2.0/Mono.Posix.NETStandard.dll 1495800 02-28-2018 15:18 runtimes/win-x64/native/libMonoPosixHelper.dll 87600 02-28-2018 15:18 runtimes/win-x64/native/MonoPosixHelper.dll 189504 02-28-2018 15:18 runtimes/win-x86/lib/netstandard2.0/Mono.Posix.NETStandard.dll 1256296 02-28-2018 15:18 runtimes/win-x86/native/libMonoPosixHelper.dll 400120 02-28-2018 15:18 runtimes/win-x86/native/MonoPosixHelper.dll 592 02-28-2018 15:18 [Content_Types].xml 692 02-28-2018 15:18 package/services/metadata/core-properties/4b5c471cadba4490965015071f90289f.psmdcp 9475 10-11-2018 20:23 .signature.p7s --------- ------- 7874039 26 files &lt;/pre&gt; &lt;p&gt;The &lt;code&gt;libMonoPosixHelper.*&lt;/code&gt; files are the native shim libraries. The directories under &lt;code&gt;runtimes&lt;/code&gt; are the supported platforms. There is Linux support for &lt;code&gt;arm&lt;/code&gt;, &lt;code&gt;arm64&lt;/code&gt;, &lt;code&gt;armel&lt;/code&gt;, &lt;code&gt;x64&lt;/code&gt; and &lt;code&gt;x86&lt;/code&gt;. The package also provides support for Windows and OS X. The Linux libraries are for flavors of Linux that are based onÂ &lt;em&gt;glibc&lt;/em&gt; (GNU C library), such as Fedora and &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Red Hat Enterprise Linux&lt;/a&gt; (RHEL). Some things won&amp;#8217;t work on flavors of Linux that are based onÂ &lt;em&gt;musl,&lt;/em&gt;Â such as Alpine. .NET Core applications using this package will pick the proper variant under the &lt;code&gt;runtimes&lt;/code&gt; folder based on the platform on which they are running. This is based on the &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/rid-catalog"&gt;runtime identifier (RID) graph&lt;/a&gt;.&lt;/p&gt; &lt;h1&gt;Tmds.LibC&lt;/h1&gt; &lt;p&gt;A while back, I blogged about a &lt;a href="https://github.com/redhat-developer/kestrel-linux-transport"&gt;Linux-specific transport for Kestrel&lt;/a&gt;. This library uses Linux-specific APIs that are not provided by .NET Core and Mono.Posix.NETStandard. So far, the library has used a native shim to make those functions accessible. A compiled version for &lt;em&gt;glibc&lt;/em&gt; x64 is in the NuGet package. This means the Transport doesnât work on other architectures or with other C libraries.&lt;/p&gt; &lt;p&gt;As explained before, one way to solve this is to recompile the shim for different platforms. While that is easy to do in theory, in practice, there is quite a bit of work involved. On each platform, the native libraries need to be built. Then those libraries need to be collected in a single NuGet package. I wanted to try a different approach: a fully managed implementation.&lt;/p&gt; &lt;p&gt;The managed implementation captures the platform ABIs in managed code. For each platform, we build an assembly that matches that platformâs ABI. The differences between platforms are small, so we can share a lot of code between them.&lt;/p&gt; &lt;p&gt;A nice effect of capturing the platform ABIs is that our .NET API can be very close to the C API. We donât need to introduce shim structsÂ or shim constants.&lt;/p&gt; &lt;p&gt;For example, the &lt;code&gt;setsockopt&lt;/code&gt; option for changing a socket option has this C API:&lt;/p&gt; &lt;pre&gt;int setsockopt(int sockfd, int level, int optname, const void *optval, socklen_t optlen); &lt;/pre&gt; &lt;p&gt;The C# API looks like this:&lt;/p&gt; &lt;pre&gt;public static int setsockopt(int socket, int level, int optname, void* optval, socklen_t optlen); &lt;/pre&gt; &lt;p&gt;As you can see, the signatures are virtually the same.&lt;/p&gt; &lt;p&gt;Because these system functions may be useful for other developers, Iâve collected them in a separate library, named &lt;em&gt;Tmds.LibC&lt;/em&gt;. You can find the source code on &lt;a href="https://github.com/tmds/Tmds.LibC"&gt;GitHub&lt;/a&gt; and packages are published to &lt;a href="https://www.nuget.org/packages/Tmds.LibC/"&gt;NuGet.org&lt;/a&gt;. The Kestrel Linux Transport has been updated to use this library. The Transport does not need to deal with platform specifics, and it now runs on arm32, arm64, and x64.&lt;/p&gt; &lt;h1&gt;Conclusion&lt;/h1&gt; &lt;p&gt;In this article, we looked at .NET PInvoke and how PInvoke differs on Linux compared to Windows. We then explored how &lt;em&gt;Mono.Posix.NETStandard&lt;/em&gt; provides a set of POSIX functions on various platforms using native shims. Finally, we took a look at &lt;em&gt;Tmds.LibC,&lt;/em&gt; which provides Linux system functions for a number architectures using a fully managed implementation.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#38;linkname=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#38;linkname=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#38;linkname=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#38;linkname=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#38;linkname=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#38;linkname=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#38;linkname=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#38;linkname=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Fusing-net-pinvoke-for-linux-system-functions%2F&amp;#038;title=Using%20.NET%20PInvoke%20for%20Linux%20system%20functions" data-a2a-url="https://developers.redhat.com/blog/2019/03/25/using-net-pinvoke-for-linux-system-functions/" data-a2a-title="Using .NET PInvoke for Linux system functions"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/25/using-net-pinvoke-for-linux-system-functions/"&gt;Using .NET PInvoke for Linux system functions&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nUeUxm4y3P4" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;If you&amp;#8217;ve developed Windows applications with .NET, you may have found yourself in a situation where the framework did not provide the APIs you needed. When that happens, you first need to identify the system APIs and then make them available using PInvoke. A website like pinvoke.net provides copy-and-pasteable code snippets for many Win32 API [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/25/using-net-pinvoke-for-linux-system-functions/"&gt;Using .NET PInvoke for Linux system functions&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/03/25/using-net-pinvoke-for-linux-system-functions/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">568897</post-id><dc:creator>Tom Deseyn</dc:creator><dc:date>2019-03-25T07:01:22Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/25/using-net-pinvoke-for-linux-system-functions/</feedburner:origLink></entry><entry><title>Five layers of security for Red Hat Data Grid on OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ihPw9aXYlCE/" /><category term="Kubernetes" /><category term="OpenShift" /><category term="Red Hat JBoss Data Grid" /><category term="Security" /><category term="containers" /><category term="Data Grid" /><category term="data security" /><category term="kubernetes" /><category term="Red Hat Data Grid" /><category term="Red Hat OpenShift" /><category term="xPaaS" /><author><name>Kapil Shukla</name></author><id>https://developers.redhat.com/blog/?p=566697</id><updated>2019-03-25T07:00:38Z</updated><published>2019-03-25T07:00:38Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/datagrid/overview"&gt;Red Hat Data Grid&lt;/a&gt; is an in-memory, distributed, NoSQL datastore solution. With it, your applications can access, process, and analyze data at in-memory speed to deliver a superior user experience. In-memory Data Grid has a variety of use cases in today&amp;#8217;s environment, such as fast data access for low-latency apps, storing objects (NoSQL) in a datastore, achieving linear scalability with data distribution/partitioning, and data high-availability across geographies, among many others. With &lt;a href="https://developers.redhat.com/topics/containers"&gt;containers&lt;/a&gt; getting more attention, the need to have Data Grid running on a container platform like &lt;a href="http://openshift.com/"&gt;OpenShift&lt;/a&gt; is clear, and we are seeing more and more customers aligning their architecture with a datastore running natively on a container platform.&lt;/p&gt; &lt;p&gt;In this article, I will talk about multiple layers of security available while deploying Data Grid on OpenShift. The layers of security offer a combination of security measures provided by Data Grid as well as by OpenShift/&lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-566697"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The Red Hat team has made the deployment of Data Grid quite easy via exposing multiple out-of-the-box OpenShift templates. You can see the various choices available &lt;a href="https://github.com/jboss-openshift/application-templates/tree/master/datagrid" target="_blank" rel="nofollow noopener noreferrer"&gt;in GitHub&lt;/a&gt;. These templates use the same underlying image and are available at the &lt;a href="https://access.redhat.com/containers/?tab=tags#/registry.access.redhat.com/jboss-datagrid-7/datagrid73-openshift" target="_blank" rel="nofollow noopener noreferrer"&gt;Red Hat container images portal&lt;/a&gt;. Different templates expose different parameters that configure Data Grid during deployment time. This makes deployment pretty standard and easy. The &amp;#8220;HTTPS template&amp;#8221; exposes aÂ bunch of security parameters. Other templates do not define these parameters; however, you could use these parameters during deployment time.&lt;/p&gt; &lt;p&gt;If you would like to practice the following recommendations (except for number 5), see &lt;a href="https://github.com/kgshukla/jboss-datagrid-ocp-hotrod-secure/" target="_blank" rel="nofollow noopener noreferrer"&gt;JDG on OpenShift with Hot Rod and Security Enabled&lt;/a&gt;Â on GitHub. There, you can find code snippets and commands.&lt;/p&gt; &lt;h2&gt;Securing Data Grid deployments on OpenShift&lt;/h2&gt; &lt;p&gt;To understand the five layers of security, let&amp;#8217;s assume the following requirements are met in OpenShift (as shown in the figure):&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Data Grid is deployed in cluster mode.&lt;/li&gt; &lt;li&gt;Only app 1 (A1) is permitted to access Data Grid (via Hot Rod).&lt;/li&gt; &lt;li&gt;A cache is declared in Data Grid.&lt;/li&gt; &lt;li&gt;Apps and Data Grid are deployed in different projects/namespaces (they could be deployed in the same project as well).&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/03/DataGrid-setup.png"&gt;&lt;img class=" aligncenter wp-image-572007 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/DataGrid-setup-1024x550.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/DataGrid-setup-300x161.png" alt="Five layers of security" width="360" height="193" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/DataGrid-setup-300x161.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/DataGrid-setup-768x412.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/DataGrid-setup-1024x550.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/DataGrid-setup.png 1097w" sizes="(max-width: 360px) 100vw, 360px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Layer 1: Encrypted communication among Data Grid pods in a cluster&lt;/h3&gt; &lt;p&gt;In cluster mode, you need Data Grid pods to communicate securely with each other. When A1 accesses Data Grid, the request to locate the key can land on any pod in the cluster. If that pod does not hold the key, the request is moved to another pod holding the key. Furthermore, it is important that any new pod in the Data Grid cluster should authenticate first and then join the cluster. Otherwise, you leave security loopholes in the Data Grid cluster deployment.&lt;/p&gt; &lt;p&gt;Therefore, the first layer of security requires that Data Grid pods authenticate before joining the cluster as well as securely communicate with each other. See &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.2/html/data_grid_for_openshift/os_traffic#encrypting_traffic_between_clustered_servers"&gt;Encrypting Traffic Between Clustered Servers&lt;/a&gt; to learn more about different types of encryption you could chooseÂ (SYM or ASYM).&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/03/pods-authentication.png"&gt;&lt;img class=" aligncenter wp-image-572017 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/pods-authentication-1024x552.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/pods-authentication-300x162.png" alt="First layer of security" width="337" height="182" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/pods-authentication-300x162.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/pods-authentication-768x414.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/pods-authentication-1024x552.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/pods-authentication.png 1095w" sizes="(max-width: 337px) 100vw, 337px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To achieve encryption, you must create a keystore that will hold the certificate (self-signed or CA authorized). Upload the keystore file as a secret object in OpenShift. You should then set the following parameters while deploying the HTTPS Data Grid template:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;JGROUPS_ENCRYPT_NAME&lt;/code&gt;: Keystore alias&lt;/li&gt; &lt;li&gt;&lt;code&gt;JGROUPS_ENCRYPT_SECRET&lt;/code&gt;: OpenShift secret object name that holds the key&lt;/li&gt; &lt;li&gt;&lt;code&gt;JGROUPS_ENCRYPT_KEYSTORE&lt;/code&gt;: The name of the key in the secret object that holds the keystore value&lt;/li&gt; &lt;li&gt;&lt;code&gt;JGROUPS_ENCRYPT_PASSWORD&lt;/code&gt;: Password to get access to the keystore&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The HTTPS template automatically generates authentication credentials and stores them in the &lt;code&gt;JGROUPS_CLUSTER_PASSWORD&lt;/code&gt; parameter. Pods use that parameter value to authenticate while joining a cluster. You could, of course, override this parameter while deploying the Data Grid cluster.&lt;/p&gt; &lt;h3&gt;Layer 2: Encrypted communication between applications and the Data Grid cluster&lt;/h3&gt; &lt;p&gt;Encrypted communication between a client and the Data Grid cluster is the next recommendation. This is important because the traffic could be intercepted if there is a security breach. There are a couple of ways to access the Data Grid cluster:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;From apps running in OpenShift&lt;/li&gt; &lt;li&gt;From apps running outside of Data Grid&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the first scenario, an app accesses Data Grid directly via OpenShift&amp;#8217;s service objects and, therefore, there is a need to deploy Data Grid in a manner that exposes a service URL as the &amp;#8220;exposed&amp;#8221; URL with encryption enabled. (Note that there are many ways to access Data Grid, namely REST and Hot Rod). In the second scenario, the OpenShift operator should make a change in the Data Grid route object that just passes through the traffic at the OpenShift router. The traffic decryption would happen at the Data Grid cluster. The following diagram depicts the second security requirement. (Most of the time, you would &lt;em&gt;not&lt;/em&gt; want to provide direct access to Data Grid to any app running outside of OpenShift). See &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.2/html/data_grid_for_openshift/os_traffic#encrypting_client_to_server_communication"&gt;Encrypting Client to Server Communication&lt;/a&gt; to learn more about this security recommendation.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/03/client-jdg-encryption.png"&gt;&lt;img class=" aligncenter wp-image-572027 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/client-jdg-encryption-1024x548.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/client-jdg-encryption-300x161.png" alt="Second layer of security" width="363" height="195" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/client-jdg-encryption-300x161.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/client-jdg-encryption-768x411.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/client-jdg-encryption-1024x548.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/client-jdg-encryption.png 1095w" sizes="(max-width: 363px) 100vw, 363px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;A similar need to create a keystore with a certificate and keystore password is present in this scenario. Create the keystore and upload it as aÂ secret object in OpenShift. Set the following parameters while deploying the HTTPS Data Grid template:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;HOTROD_SERVICE_NAME&lt;/code&gt;: OpesnSift&amp;#8217;s service object name&lt;/li&gt; &lt;li&gt;&lt;code&gt;HOTROD_ENCRYPTION&lt;/code&gt;: Set to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;HTTPS_NAME&lt;/code&gt;: Keystore alias&lt;/li&gt; &lt;li&gt;&lt;code&gt;HTTPS_SECRET&lt;/code&gt;: OpenShift secret object name that holds the keystore file&lt;/li&gt; &lt;li&gt;&lt;code&gt;HTTPS_KEYSTORE&lt;/code&gt;: Name of the key in the secret object, the value of which is a keystore&lt;/li&gt; &lt;li&gt;&lt;code&gt;HTTPS_PASSWORD&lt;/code&gt;: Password to open the keystore&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Layer 3: Cache authentication&lt;/h3&gt; &lt;p&gt;Now that traffic is encrypted, theÂ next security recommendation is to authenticate a client application when it attempts to access a cache in the Data Grid cluster. The following figure highlights this requirement.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-authenticate.png"&gt;&lt;img class=" aligncenter wp-image-572037 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-authenticate-1024x552.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-authenticate-300x162.png" alt="Third layer of security" width="365" height="197" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-authenticate-300x162.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-authenticate-768x414.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-authenticate-1024x552.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-authenticate.png 1089w" sizes="(max-width: 365px) 100vw, 365px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;Set theÂ &lt;code&gt;USERNAME&lt;/code&gt; and &lt;code&gt;PASSWORD&lt;/code&gt; parameters (defined in the HTTPS template) during deployment time.&lt;/p&gt; &lt;h3&gt;Layer 4: Cache authorization&lt;/h3&gt; &lt;p&gt;A client application can now authenticate against the Data Grid cluster, but you also need to define the actions a client can perform on the cache. RBAC controls would allowÂ you to achieve this objective. During Data Grid deployment, you could define custom roles and assign privileges to them. You can also map a custom role with a cache (you can create more than one cache while deploying the Data Grid cluster). There are many ways to define authorization in Data Grid. See &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.2/html/administration_and_configuration_guide/red_hat_jboss_data_grid_security_authorization_and_authentication#red_hat_jboss_data_grid_security_authorization_and_authentication_2"&gt;Red Hat JBoss Data Grid Security: Authorization and Authentication&lt;/a&gt; for more information.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-RBAC.png"&gt;&lt;img class=" aligncenter wp-image-572047 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-RBAC-1024x551.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-RBAC-300x161.png" alt="Fourth layer of security" width="360" height="193" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-RBAC-300x161.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-RBAC-768x413.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-RBAC-1024x551.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/cache-RBAC.png 1097w" sizes="(max-width: 360px) 100vw, 360px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;Set the following parameters during HTTPS template deployment:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ADMIN_GROUP&lt;/code&gt;: The name of the custom role&lt;/li&gt; &lt;li&gt;&lt;code&gt;CONTAINER_SECURITY_ROLES&lt;/code&gt;: The definition of theÂ defined role with one or more cache privileges&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;#60;CACHE_NAME&amp;#62;_CACHE_SECURITY_AUTHORIZATION_ENABLED&lt;/code&gt;: Set to &lt;code&gt;true&lt;/code&gt; for enabling authorization on the &lt;code&gt;&amp;#60;CACHE_NAME&amp;#62;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;#60;CACHE_NAME&amp;#62;_CACHE_SECURITY_AUTHORIZATION_ROLES&lt;/code&gt;: Â Assignment of &lt;code&gt;&amp;#60;CACHE_NAME&amp;#62;&lt;/code&gt; with the custom role defined earlier&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Layer 5: Use OpenShift&amp;#8217;s network policy to restrict traffic between applications&lt;/h3&gt; &lt;p&gt;Now your Data Grid cluster is properly set up: All pods of the cluster communicate securely, the client communicates securely with Data Grid, and proper authentication and authorization are set up for accessing the cache. However, I recommend that you further tighten the security around Data Grid via OpenShift&amp;#8217;s &lt;a href="https://docs.openshift.com/container-platform/3.11/admin_guide/managing_networking.html#admin-guide-networking-networkpolicy" target="_blank" rel="nofollow noopener noreferrer"&gt;NetworkPolicy&lt;/a&gt; objects (or Istio). Network policy is functionality that restricts communication between applications. You could define these rules declaratively and deploy these rules along with Data Grid in the OpenShift cluster. In our scenario, we want only app1 to access the Data Grid cluster. So, here is the final security measure:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/03/openshift-networkpolicy.png"&gt;&lt;img class=" aligncenter wp-image-572057 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/openshift-networkpolicy-1024x546.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/openshift-networkpolicy-300x160.png" alt="Fifth layer of security" width="370" height="197" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/openshift-networkpolicy-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/openshift-networkpolicy-768x409.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/openshift-networkpolicy-1024x546.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/openshift-networkpolicy.png 1098w" sizes="(max-width: 370px) 100vw, 370px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;You should be careful while deploying databases/caches in container platforms because the platform is multi-tenant and your datastore could be storing sensitive information. If you would like to practice these recommendations (except for number 5 above), see &amp;#8220;&lt;a href="https://github.com/kgshukla/jboss-datagrid-ocp-hotrod-secure/" target="_blank" rel="nofollow noopener noreferrer"&gt;JDG on Openshift with Hot Rod and Security Enabled&lt;/a&gt;Â on GitHub. There, you can find code snippets and commands to deploy Data Grid securely on OpenShift.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#38;linkname=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#38;linkname=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#38;linkname=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#38;linkname=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#38;linkname=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#38;linkname=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#38;linkname=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#38;linkname=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F25%2Ffive-layers-of-security-for-red-hat-data-grid-on-openshift%2F&amp;#038;title=Five%20layers%20of%20security%20for%20Red%20Hat%20Data%20Grid%20on%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/03/25/five-layers-of-security-for-red-hat-data-grid-on-openshift/" data-a2a-title="Five layers of security for Red Hat Data Grid on OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/25/five-layers-of-security-for-red-hat-data-grid-on-openshift/"&gt;Five layers of security for Red Hat Data Grid on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ihPw9aXYlCE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat Data Grid is an in-memory, distributed, NoSQL datastore solution. With it, your applications can access, process, and analyze data at in-memory speed to deliver a superior user experience. In-memory Data Grid has a variety of use cases in today&amp;#8217;s environment, such as fast data access for low-latency apps, storing objects (NoSQL) in a [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/25/five-layers-of-security-for-red-hat-data-grid-on-openshift/"&gt;Five layers of security for Red Hat Data Grid on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/03/25/five-layers-of-security-for-red-hat-data-grid-on-openshift/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">566697</post-id><dc:creator>Kapil Shukla</dc:creator><dc:date>2019-03-25T07:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/25/five-layers-of-security-for-red-hat-data-grid-on-openshift/</feedburner:origLink></entry><entry><title>JBoss Weekly 2019-03-22</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/2GqhQn-J5pk/jboss-weekly-2019-03-22" /><category term="byteman" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="hibernate_orm" scheme="searchisko:content:tags" /><category term="hibernate_search" scheme="searchisko:content:tags" /><category term="hibernate_validator" scheme="searchisko:content:tags" /><category term="jgroups" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><author><name>Jason Porter</name></author><id>searchisko:content:id:jbossorg_blog-jboss_weekly_2019_03_22</id><updated>2019-03-23T00:24:47Z</updated><published>2019-03-23T00:24:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:f6d1eccf-09c5-4eda-a760-0db629a2ef51] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;div&gt;&lt;div&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Welcome to another JBoss Weekly Editorial as we prepare for the end of March! We have a number of releases and blogs posts to highlight, so let&amp;#8217;s get to it.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;New Releases&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/03/21/hibernate-validator-6016-final-out/" rel="nofollow"&gt;Hibernate Validator 6.0.16.Final&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/03/22/hibernate-search-6-0-0-Alpha3/" rel="nofollow"&gt;Hibernate Search 6.0.0.Alpha3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/03/22/hibernate-orm-542-final-out/" rel="nofollow"&gt;Hibernate ORM 5.4.2.Final&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://bytemanblog.blogspot.com/2019/03/byteman-406-has-been-released.html" rel="nofollow"&gt;Byteman 4.0.6&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://github.com/quarkusio/quarkus/releases/tag/0.12.0" rel="nofollow"&gt;Quarkus 0.12.0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://belaban.blogspot.com/2019/03/4019.html" rel="nofollow"&gt;JGroups 4.0.19&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;Blogs&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Christina Lin has a blog detailing which she believes are eight ideas that lead to &lt;a class="jive-link-external-small" href="http://wei-meilin.blogspot.com/2019/03/my2cents-eight-things-leads-to.html" rel="nofollow"&gt;"catastrophic cloud native microservice" deployments.&lt;/a&gt;If you are working with microservices, or are thinking about it, this blog is certainly worth a look.&lt;/p&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Eric Schabell has written a couple of pieces on &lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/03/integration-key-to-customer-experience-example-mobile-integration.html" rel="nofollow"&gt;integration&lt;/a&gt; and has a follow-up &lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/03/modern-process-integration-tooling-workshop-lab7.html" rel="nofollow"&gt;lab&lt;/a&gt; to better explain the points of integration and automation.&lt;/p&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Lastly, Brain Stansberry detailed the &lt;a class="jive-link-external-small" href="http://wildfly.org/news/2019/03/09/Onward-to_WildFly-17/" rel="nofollow"&gt;Wildfly 17 release roadmap&lt;/a&gt; over on the Wildfly site.&lt;/p&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Great stuff is happening within Red Hat! Stay tuned for even more as the year progresses!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:f6d1eccf-09c5-4eda-a760-0db629a2ef51] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/2GqhQn-J5pk" height="1" width="1" alt=""/&gt;</content><summary>Welcome to another JBoss Weekly Editorial as we prepare for the end of March! We have a number of releases and blogs posts to highlight, so letâs get to it. Â  New Releases Hibernate Validator 6.0.16.Final Hibernate Search 6.0.0.Alpha3 Hibernate ORM 5.4.2.Final Byteman 4.0.6 Quarkus 0.12.0 JGroups 4.0.19 Blogs Christina Lin has a blog detailing which she believes are eight ideas that lead to "catas...</summary><dc:creator>Jason Porter</dc:creator><dc:date>2019-03-23T00:24:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/03/22/jboss-weekly-2019-03-22</feedburner:origLink></entry><entry><title>Byteman 4.0.6 has been released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7yN71bioETQ/byteman-406-has-been-released.html" /><category term="feed_group_name_byteman" scheme="searchisko:content:tags" /><category term="feed_name_byteman" scheme="searchisko:content:tags" /><author><name>Andrew Dinn</name></author><id>searchisko:content:id:jbossorg_blog-byteman_4_0_6_has_been_released</id><updated>2019-03-22T16:15:00Z</updated><published>2019-03-22T16:15:00Z</published><content type="html">Byteman 4.0.6 is now available from the &lt;a href="http://www.jboss.org/byteman/downloads"&gt;Byteman downloads page&lt;/a&gt; and from the &lt;a href="https://oss.sonatype.org/index.html#nexus-search;quick%7Ebyteman"&gt;Maven Central repository&lt;/a&gt;. It is the latest update release for use on JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes.&lt;br /&gt;&lt;br /&gt;Byteman 4.0.6 updates the 4.0.5 release to ensure that it works&amp;nbsp; correctly on the latest JDK13 releases. Specifically, it ensures that Byteman is able to process class files with a JDK13 class file version (the previous release would run on JDK13 but could only classes whose bytecode file version was for JDK12 or lower.&lt;br /&gt;&lt;br /&gt;Byteman 4.0.6 includes two exciting new features. The first provides support for a new location specifier AT/AFTER NEW. This can be used to inject a rule at locations in method code where a new instance or new array is created. Full details are provided in &lt;a href="http://downloads.jboss.org/byteman/latest/byteman-programmers-guide.html#rule-events"&gt;Rule Events&lt;/a&gt; section of the &lt;a href="http://downloads.jboss.org/byteman/latest/byteman-programmers-guide.html"&gt;latest Byteman Programmer's Guide&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The second new feature has been contributed by Red Hat's Jonathan Halliday (many thanks, Jonathan). It extends the BMUnit package to support integration with JUnit5. The API change is relatively simple. With the original JUnit integration you needed to annotate your test classes with the JUnit4 @RunWith annotation, configuring it so it used Byteman class BMUnitRunner to run the tests. Integration with JUnit5 relies on use of annotation&amp;nbsp; @WithByteman. There is no longer any need to use a Byteman-specific Runner class.&lt;br /&gt;&lt;br /&gt;Since JUnit5 relies on JDK8 classes you can only use this new feature on JDK8+. You will need to ensure that you include new jar byteman-bmunit5.jar as a dependency in order to be able to access the new annotation. Full details of how to configure BMUNit tests with JUnit5 have been added to the &lt;a href="https://developer.jboss.org/wiki/BMUnitUsingBytemanWithJUnitOrTestNGFromMavenAndAnt#top"&gt;BMUnit tutorial&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Byteman 4.0.6 also includes a couple of small bug fixes. More details can be found in the &lt;a href="http://downloads.jboss.org/byteman/latest/ReleaseNotes.txt"&gt;Release Notes&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7yN71bioETQ" height="1" width="1" alt=""/&gt;</content><summary>Byteman 4.0.6 is now available from the Byteman downloads page and from the Maven Central repository. It is the latest update release for use on JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes. Byteman 4.0.6 updates the 4.0.5 release to ensure that it worksÂ  correctly on the latest JDK13 releases. Specifically, it ensures that Byteman is able to process cl...</summary><dc:creator>Andrew Dinn</dc:creator><dc:date>2019-03-22T16:15:00Z</dc:date><feedburner:origLink>http://bytemanblog.blogspot.com/2019/03/byteman-406-has-been-released.html</feedburner:origLink></entry></feed>
